{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/commission_rate.ts","../../src/autopilot.ts","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'itemscope',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.55.1' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","\n\n/**\n * 提成率表\n */\nconst commissionRate: {[key: string]: {text: string, rate: number}} = {\n  //////// employee\n\n  // sourcing\n  // \"employee-sourcer\": 0.07,\n  \"employee-sourcer-new\": {\n    text: '全职雇员-线索开发-新购合同',\n    rate: 0.07\n  },\n  // \"employee-sourcer-new\": {\n  //   text: '全职雇员-线索开发-大客户团队',\n  //   rate: 0.07\n  // },\n  \"employee-sourcer-renewal\": {\n    text: '全职雇员-线索开发-续费',\n    rate: 0.02\n  },\n  // kp\n  // \"employee-sales\": 0.16,\n  \"employee-sales-new\": {\n    text: '全职雇员-销售-新购',\n    rate: 0.16,\n  },\n  // \"employee-sales-ent\": {\n  //   text: '全职雇员-销售-大客户团队',\n  //   rate: 0.16,\n  // },\n  \"employee-sales-renewal\": {\n    text: '全职雇员-销售-续费',\n    rate: 0.14,\n  },\n\n  // ku users service\n  // \"employee-service\": 0.07,\n  \"employee-service-new\": {\n    text: '全职雇员-用户服务-新购合同',\n    rate: 0.07\n  },\n  // \"employee-service-renewal\": {\n  //   text: '全职雇员-用户服务-续费合同',\n  //   rate: 0.07\n  // },\n  \"employee-service-renewal\": {\n    text: '全职雇员-用户服务-续费合同',\n    rate: 0\n  },\n\n  /**\n   * 独立的付费交付服务合同的提成率\n   * 给到Partner和Contractor\n   */\n  \"employee-payservice\": {\n    text: '全职雇员-付费交付服务',\n    rate: 0.2 \n  },\n\n  /**\n   * 雇员奖金池\n   */\n  \"employee-bonus\": {\n    text: '全职雇员-年/季奖金池',\n    rate: 0.05,\n  },\n\n  /**\n   * 渠道经理\n   */\n  \"employee-partnersales\": {\n    text: '全职雇员-渠道服务',\n    rate: 0.2,\n  },\n\n  //////// partner & contractors\n  \"partner-sourcer\": {\n    text: undefined,\n    rate: 0\n  },\n  \"partner-sales\": {\n    text: undefined,\n    rate: 0.51\n  },\n  \"partner-sales-b\": {\n    text: '合作伙伴(B级)销售',\n    rate: 0.51\n  },\n  \"partner-sales-a\": {\n    text: '合作伙伴(A级)销售',\n    rate: 0.61\n  },\n  \"partner-sales-s\": {\n    text: '合作伙伴(S级)销售',\n    rate: 0.71,\n  },\n  \"partner-service\": {\n    text: undefined,\n    rate: 0,\n  },\n  \"contractor-sourcer\": {\n    text: undefined,\n    rate: 0,\n  },\n  \"contractor-sales\": {\n    text: undefined,\n    rate: 0.51,\n  },\n  \"contractor-sales-b\": {\n    text: '兼职雇员(B级)销售',\n    rate: 0.51,\n  },\n  \"contractor-sales-a\": {\n    text: '兼职雇员(A级)销售',\n    rate: 0.61,\n  },\n  \"contractor-sales-s\": {\n    text: '兼职雇员(S级)销售',\n    rate: 0.71,\n  },\n  \"contractor-service\": {\n    text: undefined,\n    rate: 0,\n  }\n};\n\nexport default commissionRate;","// Auto Pilot for Commission Calculator\n// Generate report automatically\n\nimport commissionRate from \"./commission_rate\";\n\n/**\n * 职员类型\n */\nexport enum PersonnelType {\n    Employee = 'employee',\n    Contractor = 'contractor',\n    Partner = 'partner',\n  }\n\n  export enum PersonnelRole {\n    // ENT = 'ent',\n    // SME = 'sme',\n    // CSM = 'csm',\n\n    S = 's',\n    A = 'a',\n    B = 'b',\n\n  }\nexport interface Personnel {\n    name?: string;\n    type: PersonnelType;\n    role?: PersonnelRole;\n}\n/**\n * 线索\n */\nexport interface Lead {\n    sourcer: Personnel;\n    sales: Personnel;\n    servant: Personnel;\n    partnerSales?: Personnel;\n}\n\nexport interface Customer {\n\n}\n\nexport enum ContractType {\n    New = \"new\",\n    Renewal = \"renewal\",\n}\n/**\n * 合同\n */\nexport interface Contract {\n    customer: Customer;\n    lead: Lead;\n    tcv: number;\n    period: number;\n    type: ContractType;\n\n\n}\n/**\n * 回款\n */\nexport interface Payment {\n    contract: Contract;\n    amount: number;\n    salesCost: number;\n}\n\n/**\n * 统计周期\n */\nenum PeriodType {\n    AllTime,\n    LastMonth,\n    CurrentMonth,\n}\n\n/**\n * 阿米巴类型\n */\nexport enum AmoebaType {\n  /**\n   * 内部阿米巴\n   */\n  InHouse,\n  /**\n   * 外部阿米巴\n   */\n  Outside,\n  /**\n   * 奖金池\n   */\n  BonusPool,\n}\n\n/**\n * 阿米巴\n */\nexport interface Amoeba {\n    type: AmoebaType;\n    members: Personnel[];\n}\n\n/**\n * 阿米巴账单\n */\nexport interface AmoebaBill {\n    amoeba: Amoeba;\n    amount: number;\n    reason: string;\n    type: AmoebaBillType;\n}\n\n\n/**\n * SQC计算结果 （针对Payment）\n */\nexport class SQCResult {\n\n    sourcerSQC: number;\n    salesSQC: number;\n    serviceSQC: number;\n    partnerSalesSQC: number;\n    bonusPool: number;\n    compensation: number;\n\n    /**\n     * 销售人类型\n     */\n    salesType: PersonnelType;\n  \n    constructor(source: Partial<SQCResult>) {\n        Object.assign(this, source);\n    }\n\n    get partnerIncome() {\n      if (this.salesType != PersonnelType.Employee) {\n        return this.salesSQC - this.compensation;\n      }\n\n      return 0;\n    }\n}\n\nexport const sourcerCommissionRate = (sourcerType, contractType) => {\n  // sourcer必须是雇员\n  if (sourcerType == PersonnelType.Employee) \n    return getCommissionRate(sourcerType, \"sourcer\", contractType);\n  return 0;\n};\n\n/**\n * 服务人员的提成率\n */\nexport const serviceCommissionRate = (salesType, contractType) => {\n  if (salesType == PersonnelType.Employee)\n    return getCommissionRate(PersonnelType.Employee, \"service\", contractType);\n  return 0;\n};\n\n/**\n * 计算所有SQC如何分\n */\nexport function getSQCResult(payment: Payment, compensation: number = 0): SQCResult{\n\n  const contract = payment.contract;\n  const contractType = contract.type;\n  const sqrOfProduct = getSQR(payment.amount, contract.period);\n  const sourcerType = contract.lead.sourcer.type;\n  const salesType = contract.lead.sales.type;\n\n  const paymentMargin = payment.amount - payment.salesCost;\n  const partnerLevel = contract.lead.sales.role; // if partner\n\n  let salesSQC = 0;\n  if (salesType == PersonnelType.Partner) {\n      salesSQC = paymentMargin * getSalesCommissionRate(salesType, contractType, partnerLevel); // partner按回款、contractor按SQR\n    } else if (salesType == PersonnelType.Employee) {\n      salesSQC = sqrOfProduct * getSalesCommissionRate(salesType, contractType, partnerLevel);\n    } else {\n      salesSQC = sqrOfProduct * getSalesCommissionRate(salesType, contractType, partnerLevel);\n    }\n\n  // start calc the SQC\n  let sourcerSQC = 0;\n  // 我们开发的线索，给到Partners，我们的怎么分？\n  if (salesType == PersonnelType.Employee) {\n    sourcerSQC = sqrOfProduct * sourcerCommissionRate(sourcerType, contractType);\n  } else {\n    // 如果是渠道合作伙伴，减掉他们的分成后，剩下的才是我们的\n    sourcerSQC = (sqrOfProduct - salesSQC) * sourcerCommissionRate(sourcerType, contractType);\n  }\n\n  const serviceSQC = sqrOfProduct * serviceCommissionRate(salesType, contractType);\n\n  const payServiceSQC = 0;\n\n  let partnerSalesSQC = 0\n  if (salesType != PersonnelType.Employee) {\n    partnerSalesSQC = (sqrOfProduct - salesSQC) * getCommissionRate(\"employee\", \"partnersales\");\n  }\n\n  const bonusPool = sqrOfProduct * getCommissionRate(\"employee\", \"bonus\");\n\n  const res = new SQCResult({\n      sourcerSQC: sourcerSQC,\n      salesSQC: salesSQC,\n      serviceSQC: serviceSQC,\n      // payServiceSQC: payServiceSQC,\n      partnerSalesSQC: partnerSalesSQC,\n      bonusPool: bonusPool,\n      compensation: compensation,\n\n      salesType: salesType,\n  })\n  return res;\n\n}\n/**\n * 阿米巴账单类型\n */\nexport enum AmoebaBillType {\n    SQC = 'sqc',\n    Salary = 'salary',\n}\n\n\nexport function getARR(productTCV: number, periodMonthly: number) {\n  return productTCV / (periodMonthly / 12);\n}\n\nexport function getMRR(productTCV: number, periodMonthly: number) {\n  return productTCV / periodMonthly;\n}\n\n/**\n * Product SQR\n */\nexport function getSQR(productPayment: number, periodMonthly: number) {\n  const contractPeriodYearly = periodMonthly / 12;\n  return productPayment / contractPeriodYearly +\n    ((productPayment * (contractPeriodYearly - 1)) / contractPeriodYearly) *\n      0.5;\n}\n\n/**\n * 销售提成率，根据不同的销售职员类型、岗位类型，提成率不同\n */\nexport const getSalesCommissionRate = (salesType: string, contractType: string, partnerLevel: string) => {\n  if (salesType == 'employee') {\n      return getCommissionRate('employee', \"sales\", contractType);\n  } else {\n      return getCommissionRate(salesType, \"sales\", partnerLevel); // contractor、partner分级别\n  }\n};\n\n/**\n * 根据职员、岗位、额外属性，提取提成率对象\n */\nexport const getCommissionRateObject = (personnelType: string, role, extra = undefined) => {\n  const key =\n    extra === undefined\n      ? `${personnelType}-${role}`\n      : `${personnelType}-${role}-${extra}`;\n  const obj = commissionRate[key];\n  return obj;\n};\n\n/**\n * 根据职员、岗位、额外属性，提取提成率对象\n */\nexport const getCommissionRate = (personnelType, role, extra = undefined) => {\n  const obj = getCommissionRateObject(personnelType, role, extra);\n  if (obj) return obj.rate;\n  return 0;\n};\n\n/**\n * 计算所有阿米巴余额\n */\nexport function calc(\n    leads: {[key: string]: Lead}, \n    customers: {[key: string]:Customer},\n    amoebas: {[key: string]: Amoeba},\n    amoebaBiils: {[key: string]: AmoebaBill}\n    ) {\n    // for (const bill of amoebaBills) {\n\n    // }\n}\n","<script lang=\"ts\">\n  import { ContractType, getARR, getMRR, getSQR, Payment, PersonnelRole, PersonnelType } from \"./autopilot\";\n  import * as lib from \"./autopilot\";\n  import commissionRate from \"./commission_rate\";\n\n  /**\n   * total contract value\n   * 合同总价值\n   */\n  $: tcv = 10000;\n\n  /**\n   * personnel type\n   * 职员类型\n   */\n  $: personnelTypes = [\n    { id: PersonnelType.Employee, text: `全职雇员 Employee` },\n    { id: PersonnelType.Contractor, text: `合约雇员 Contractor` },\n    { id: PersonnelType.Partner, text: `渠道合作伙伴 Partner` },\n  ];\n\n  /**\n   * 合同类型\n  */\n  $: contractTypes = [\n    { id: ContractType.New, text: `New 新购合同` },\n    { id: ContractType.Renewal, text: `Renewal 续费合同` },\n\n  ]\n\n  $: contractType = ContractType.New;\n\n  /**\n   * the sourcing people personnel type\n   * Sourcer职员类型\n   */\n  $: sourcerType = PersonnelType.Employee;\n\n  /**\n   * 第三方销售成本\n   * 服务、采购、硬件等\n   * 不包括特殊费用\n   */\n  $: salesCost = 0;\n\n  /**\n   * sales personnel type\n   * 销售Sales的职员类型\n   */\n  $: salesType =  PersonnelType.Partner;\n\n  /**\n   * Sales Employee Job Type\n   * 雇员型销售的类型，大客户、直销、客户成功\n   */\n  // export let employeeSalesType = PersonnelRole.SME;\n\n  /**\n   * 销售雇员岗位类型\n   */\n  // export let employeeSalesTypes = [\n  //   { id: PersonnelRole.SME, text: \"直销 SME\" },\n  //   { id: PersonnelRole.ENT, text: \"大客户 ENT\" },\n  //   { id: PersonnelRole.CSM, text: \"客户成功 CSM\" },\n  // ];\n\n  /**\n   * Contract Period\n   * 合同周期，单位月\n   */\n  $: contractPeriod = 12;\n\n  /**\n   * 可选合同种类\n   */\n  export let contractModels = [\n    { id: \"product\", text: `纯产品 Product-only` },\n    { id: \"service\", text: `纯服务 Service-only` },\n    { id: \"hybrid\", text: `产品加服务 Hybrid` },\n  ];\n\n  /**\n   * Contract Model\n   * 合同种类\n   */\n  export let contractModel = \"product\";\n\n  /**\n   * Contract Service Value\n   * 合同中的服务部分价值（排除产品价值）\n   */\n  $: contractServiceValue = contractModel == \"service\" ? tcv : 0;\n\n  /**\n   * 合同中的产品部分价值\n   */\n  $: contractProductValue = () => {\n    if (contractModel == \"product\") {\n      return tcv;\n    } else if (contractModel == \"service\") {\n      return 0;\n    } else if (contractModel == \"hybrid\") {\n      return tcv - contractServiceValue;\n    } else {\n      return 0;\n    }\n  };\n\n  /**\n   * 合同中的产品部分价值占比\n   */\n  $: tcvOfProductRatio = () => {\n    return contractProductValue() / tcv;\n  };\n\n  /**\n   * 合同中的服务部分价值占比\n   */\n  $: tcvOfServiceRatio = () => {\n    return contractServiceValue / tcv;\n  };\n\n  /**\n   * how many payment get back?\n   * 回款\n   */\n  $: payment = 8000;\n\n  /**\n   * Payment Margin\n   * 回款毛利\n   */\n  $: paymentMargin = payment - salesCost;\n\n  /**\n   * 回款所属产品部分\n   */\n  $: paymentOfProduct = () => {\n    return paymentMargin * tcvOfProductRatio();\n  };\n\n  /**\n   * 回款所属的服务部分\n   */\n  $: paymentOfService = () => {\n    return paymentMargin * tcvOfServiceRatio();\n  };\n\n  /**\n   * Payment Ratio\n   * 回款比例 (回款比例 = 回款 / 合同总价值)\n   */\n  $: paymentRatio = payment / tcv;\n\n\n  /**\n   * ARR\n   */\n  $: arr = getARR(contractProductValue(), contractPeriod);\n\n  /**\n   * MRR\n   */\n  $: mrr = getMRR(contractProductValue(), contractPeriod);\n\n  /**\n   * 产品SQR 销售确认收入\n   */\n  $: sqrOfProduct = getSQR(paymentOfProduct(), contractPeriod);\n    // paymentOfProduct() / contractPeriodYearly +\n    // ((paymentOfProduct() * (contractPeriodYearly - 1)) / contractPeriodYearly) *\n    //   0.5;\n\n  /**\n   * 服务SQR 销售确认收入\n   */\n  $: sqrOfService = paymentOfService();\n\n  /**\n   * 根据职员、岗位、额外属性，提取提成率对象\n   */\n  $: getCommissionRate = (personnelType, role, extra = undefined) => {\n    return lib.getCommissionRate(personnelType, role, extra);\n  };\n\n  /**\n   * Sourcer的提成率\n   */\n  $: sourcerCommissionRate = () => {\n    // sourcer必须是雇员\n    return getCommissionRate(sourcerType, \"sourcer\", contractType);\n  };\n\n  /**\n   * Sourcer的SQC，计提阿米巴\n   */\n  $: sourcerSQC = () => {\n    const res = getSQCResult();\n    return res.sourcerSQC;\n\n    // // 我们开发的线索，给到Partners，我们的怎么分？\n    // if (salesType == \"employee\") {\n    //   return sqrOfProduct * sourcerCommissionRate();\n    // } else {\n    //   // 如果是渠道合作伙伴，减掉他们的分成后，剩下的才是我们的\n    //   return (sqrOfProduct - salesSQC()) * sourcerCommissionRate();\n    // }\n  };\n\n  /**\n   * 销售提成率，根据不同的销售职员类型、岗位类型，提成率不同\n   */\n  $: realSalesCommissionRate = () => {\n    return lib.getSalesCommissionRate(salesType, contractType, partnerLevel);\n  };\n\n  /**\n   * Sales的SQC，计提阿米巴\n   */\n  $: salesSQC = () => {\n    const res = getSQCResult();\n    return res.salesSQC;\n\n    // if (salesType == \"partner\") {\n    //   return paymentMargin * realSalesCommissionRate(); // partner按回款、contractor按SQR\n    // } else if (salesType == \"employee\") {\n    //   return sqrOfProduct * realSalesCommissionRate();\n    // } else {\n    //   return sqrOfProduct * realSalesCommissionRate();\n    // }\n  };\n\n  /**\n   * 构造一个模拟的Payment对象，用于计算SQC\n   */\n  $: getSQCResult = () => {\n    const simPayment: Payment = {\n      contract: {\n        tcv: tcv,\n        period: contractPeriod,\n        type: contractType,\n        customer: {\n        },\n        lead: {\n          sourcer: {\n            name: 'sim-sourcer',\n            type: sourcerType,\n            role: partnerLevel,\n          },\n          sales: {\n            name: 'sim-sales',\n            type: salesType,\n            role: partnerLevel,\n          },\n          servant: {\n            name: 'sim-servant',\n            type: PersonnelType.Employee,\n            role: partnerLevel,\n          }\n        }\n      },\n      amount: payment,\n      salesCost: salesCost,\n    }\n\n    const res = lib.getSQCResult(simPayment, compensation);\n    return res;\n  }\n\n  /**\n   * 计入公司奖金池金额\n   */\n  $: bonusPool = () => {\n    const res = getSQCResult();\n    return res.bonusPool;\n    // return sqrOfProduct * getCommissionRate(\"employee\", \"bonus\");\n  };\n\n  /**\n   * 服务人员的提成率\n   */\n  $: serviceCommissionRate = () => {\n    if (salesType == \"employee\")\n      return getCommissionRate(\"employee\", \"service\", contractType);\n    return 0;\n  };\n\n  /**\n   * 交付、服务人员SQC ,即SE/CSM/KU\n   */\n  $: serviceSQC = () => {\n    const res = getSQCResult();\n    return res.serviceSQC;\n  };\n\n  /**\n   * 付费的交付服务的SQC\n   */\n  $: payDeliveryServiceSQC = () => {\n    // const res = getSQCResult();\n    // return res.payDeliveryServiceSQC;\n    return sqrOfService * getCommissionRate(\"employee\", \"payservice\");\n  };\n\n  /**\n   * 渠道经理SQC、分成，扣掉合作伙伴分成后的数\n   */\n  $: partnerSalesSQC = () => {\n    const res = getSQCResult();\n    return res.partnerSalesSQC;\n    // if (salesType != \"employee\") {\n    //   return (sqrOfProduct - salesSQC()) * partnerSalesCommissionRate();\n    // }\n\n    // return 0;\n  };\n\n  /**\n   * 由于渠道经理的SQC，是扣掉合作伙伴分成后的数，所以这里计算一个比例，显示真实的SQR的总提成率\n   */\n  $: partnerSalesSQC_SQR_Ratio = () => {\n    return partnerSalesSQC() / sqrOfProduct;\n  };\n\n  /**\n   * 渠道经理提成率\n   */\n  $: partnerSalesCommissionRate = () => {\n    return getCommissionRate(\"employee\", \"partnersales\");\n  };\n\n  /**\n   * 合作伙伴收入\n   */\n  $: partnerIncome = () => {\n    const res = getSQCResult();\n\n    return res.partnerIncome;\n    // if (salesType != \"employee\") {\n    //   return salesSQC() - compensation;\n    // }\n    // return 0;\n  };\n\n  /**\n   * 合作伙伴、合约雇员级别选择\n   */\n  $: partnersLevel = [\n    { id: PersonnelRole.B, text: `铜牌级(B)` },\n    { id: PersonnelRole.A, text: `银牌级(A)` },\n    { id: PersonnelRole.S, text: `金牌级(S)` },\n  ];\n\n  /**\n   * 合作伙伴、合约雇员级别\n   */\n  $: partnerLevel = PersonnelRole.B; //\n\n  /**\n   * 补偿compensation\n   * 渠道或合约人员，回馈补偿、填充对价\n   */\n  $: compensation = 0;\n\n  /**\n   * 公司这次回款的真实净利\n   */\n  $: netIncomeByPayment = payment - salesCost - shareInPayment;\n\n  /**\n   * 公司这次回款的真实净利率\n   */\n  $: netIncomeRatioByPayment = netIncomeByPayment / payment;\n\n  /**\n   * 本次回款的公司分利， 即分了多少出去\n   */\n  $: shareInPayment =\n    bonusPool() +\n    salesSQC() +\n    sourcerSQC() +\n    serviceSQC() +\n    payDeliveryServiceSQC() +\n    partnerSalesSQC() -\n    compensation;\n\n  /**\n   * 分利占回款比例\n   */\n  $: shareInPaymentRatio = 1 - netIncomeRatioByPayment;\n</script>\n\n<main>\n  <h1>Commission Calculator</h1>\n  <form>\n    <table border=\"1\" cellspacing=\"1\">\n      <tr>\n        <td>\n          <label for=\"tcv\">\n            Total Contract Value (TCV)\n            <br />\n            合同总价值\n          </label>\n        </td>\n        <td>\n          <input name=\"tcv\" type=\"number\" bind:value={tcv} />\n        </td>\n      </tr>\n\n      <tr>\n        <td>\n          <label for=\"contractModel\">\n            Contract Model \n            <br />\n            合同种类\n          </label>\n        </td>\n        <td>\n          <select name=\"contractModel\" bind:value={contractModel} disabled>\n            {#each contractModels as cm}\n              <option value={cm.id}>\n                {cm.text}\n              </option>\n            {/each}\n          </select>\n        </td>\n      </tr>\n\n      {#if contractModel == \"hybrid\"}\n        <tr>\n          <td>\n            <label for=\"contractServiceValue\">\n              Service value in this contract\n              <br />\n              合同中的服务价值多少?\n            </label>\n          </td>\n          <td>\n            <input\n              name=\"contractServiceValue\"\n              type=\"number\"\n              bind:value={contractServiceValue}\n            />\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Product value in this contract\n            <br />\n            合同中的产品价值多少?\n          </td>\n          <td>\n            {contractProductValue()}\n          </td>\n        </tr>\n      {/if}\n\n      {#if contractModel != \"service\"}\n        <tr>\n          <td>\n            <label for=\"period\">\n              Contract Period\n              <br />\n              合同周期多少个月?\n            </label>\n          </td>\n          <td>\n            <input name=\"period\" type=\"number\" bind:value={contractPeriod} />\n          </td>\n        </tr>\n\n        <tr>\n          <td>\n            ARR (Annual Recurring Revenue)\n            <br />合同总年度经常性收入\n          </td>\n          <td>\n            {arr}\n          </td>\n        </tr>\n        <tr>\n          <td>\n            MRR (Monthly Recurring Revenue)\n            <br />合同月化经常性收入\n          </td>\n          <td>\n            {mrr}\n          </td>\n        </tr>\n      {/if}\n\n      <tr>\n        <td>\n          <label for=\"contractModel\">\n            Contract Type\n            <br />\n            合同类型\n          </label>\n        </td>\n        <td>\n          <select name=\"contractType\" bind:value={contractType}>\n            {#each contractTypes as ct}\n              <option value={ct.id}>\n                {ct.text}\n              </option>\n            {/each}\n          </select>\n        </td>\n      </tr>\n\n      <tr>\n        <td>\n          <label for=\"payment\">\n            Payment\n            <br />\n            回款\n          </label>\n        </td>\n        <td>\n          <input name=\"payment\" type=\"number\" bind:value={payment} />\n        </td>\n      </tr>\n\n      <tr>\n        <td>\n          <label for=\"paymentRatio\">\n            Payment Ratio\n            <br />\n            回款比例\n          </label>\n        </td>\n        <td>\n          {paymentRatio * 100}%\n        </td>\n      </tr>\n\n      <tr>\n        <td>\n          <label for=\"salesCost\">\n            Sales Cost\n            <br />\n            销售成本, 为完成本项目交付 <br />\n            支付费用采购的第三方服务、软件、硬件费用\n          </label>\n        </td>\n        <td>\n          <input name=\"salesCost\" type=\"number\" bind:value={salesCost} />\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <label for=\"paymentMargin\">\n            Payment Margin\n            <br />\n            回款毛利\n          </label>\n        </td>\n\n        <td>\n          {paymentMargin}\n        </td>\n      </tr>\n\n\n      {#if contractModel == \"hybrid\" || contractModel == \"product\"}\n        <tr>\n          <td>\n            Payment of Product\n            <br />\n            回款的产品部分\n          </td>\n          <td>\n            {paymentOfProduct()}\n          </td>\n        </tr>\n      {/if}\n\n      {#if contractModel == \"hybrid\" || contractModel == \"service\"}\n        <tr>\n          <td>\n            Payment of Service\n            <br />\n            回款的服务部分\n          </td>\n          <td>\n            {paymentOfService()}\n          </td>\n        </tr>\n      {/if}\n\n      <tr>\n        <td>\n          <label for=\"whoSourcingType\">\n            Sourcer\n            <br />\n            线索的来源?\n          </label>\n        </td>\n        <td>\n          <select name=\"whoSourcingType\" bind:value={sourcerType}>\n            {#each personnelTypes as personnelType}\n              <option value={personnelType.id}>\n                {personnelType.text}\n              </option>\n            {/each}\n          </select>\n        </td>\n      </tr>\n\n      <tr>\n        <td>\n          <label for=\"whoSalesType\">\n            Sales\n            <br />\n            订单谁销售的？\n          </label>\n        </td>\n        <td>\n          <select name=\"whoSalesType\" bind:value={salesType}>\n            {#each personnelTypes as personnelType}\n              <option value={personnelType.id}>\n                {personnelType.text}\n              </option>\n            {/each}\n          </select>\n        </td>\n      </tr>\n      <!-- {#if salesType == \"employee\"}\n        \n        <tr>\n          <td>\n            <label for=\"employeeSalesType\">\n              Employee Type\n              <br />\n              销售雇员类型？\n            </label>\n          </td>\n          <td>\n            <select name=\"employeeSalesType\" bind:value={employeeSalesType}>\n              {#each employeeSalesTypes as est}\n                <option value={est.id}>\n                  {est.text}\n                </option>\n              {/each}\n            </select>\n          </td>\n        </tr>\n      {/if} -->\n\n      {#if salesType == PersonnelType.Partner || salesType == PersonnelType.Contractor}\n        <tr>\n          <td>\n            <label for=\"partnerLevel\">\n              Partner(Contractor) Type\n              <br />\n              合作级别\n            </label>\n          </td>\n          <td>\n            <select name=\"partnerLevel\" bind:value={partnerLevel}>\n              {#each partnersLevel as level}\n                <option value={level.id}>\n                  {level.text}\n                </option>\n              {/each}\n            </select>\n          </td>\n        </tr>\n      {/if}\n\n      {#if contractModel == \"hybrid\" || contractModel == \"product\"}\n        <tr>\n          <td>\n            <label for=\"sqr\">\n              产品SQR (Sales Qualified Revenue)\n              <br />\n              销售确认收入 ？\n            </label>\n          </td>\n          <td>\n            {sqrOfProduct}\n          </td>\n        </tr>\n      {/if}\n\n      {#if contractModel == \"hybrid\" || contractModel == \"service\"}\n        <tr>\n          <td>服务SQR</td>\n          <td>\n            {sqrOfService}\n          </td>\n        </tr>\n      {/if}\n\n      {#if sourcerType == PersonnelType.Employee}\n        <tr>\n          <td>\n            <span>\n              Sourcer Commission Rate\n              <br />\n              Sourcer提成率\n            </span>\n          </td>\n          <td>\n            {(sourcerCommissionRate() * 100).toFixed(2)}%\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <span>\n              Sourcer SQC (Sales Qualified Commission)\n              <br />\n              Sourcer计提多少阿米巴收入?\n            </span>\n          </td>\n          <td>\n            {sourcerSQC().toFixed(2)}\n          </td>\n        </tr>\n      {/if}\n\n      <tr>\n        <td>\n          <span>\n            {#if salesType == PersonnelType.Employee}\n              Sales Commission Rate\n              <br />\n              Sales提成率\n            {:else}\n              Partner/Contractor Commission Rate\n              <br />\n              伙伴销售提成率\n            {/if}\n          </span>\n        </td>\n        <td>\n          {realSalesCommissionRate() * 100}%\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <span>\n            {#if salesType == PersonnelType.Employee}\n              Sales SQC (Sales Qualified Commission)\n              <br />\n              Sales计提多少阿米巴收入?\n            {:else}\n              Partner/Contractor SQC\n              <br />\n              伙伴销售计提多少提成?\n            {/if}\n          </span>\n        </td>\n        <td>\n          {salesSQC().toFixed(2)}\n        </td>\n      </tr>\n\n      {#if sourcerType == PersonnelType.Employee && contractType == ContractType.New}\n        <tr>\n          <td>\n            <span>\n              CSM/SE/CS Commission Rate\n              <br />\n              KU服务方提成率\n            </span>\n          </td>\n          <td>\n            {(serviceCommissionRate() * 100).toFixed(2)}%\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <span>\n              CSM/SE/CS SQC (Sales Qualified Commission)\n              <br />\n              KU服务方计提多少阿米巴收入?\n            </span>\n          </td>\n          <td>\n            {serviceSQC()}\n          </td>\n        </tr>\n      {/if}\n\n      {#if contractModel == \"hybrid\" || contractModel == \"service\"}\n        <tr>\n          <td>\n            <span>\n              Pay Service SQC\n              <br />\n              付费服务提成\n            </span>\n          </td>\n          <td>\n            {payDeliveryServiceSQC()}\n          </td>\n        </tr>\n      {/if}\n\n      <tr>\n        <td>\n          Compensation\n          <br />\n          补偿机制，在Sales SQC或\n          <br />\n          Partner/Contractor SQC中扣除某些费用\n        </td>\n        <td>\n          <input name=\"compensation\" type=\"number\" bind:value={compensation} />\n        </td>\n      </tr>\n\n      {#if salesType == \"partner\" || salesType == \"contractor\"}\n        <tr>\n          <td>\n            <span>\n              Partner Sales SQC (Sales Qualified Commission)\n              <br />\n              渠道销售计提多少阿米巴收入?\n            </span>\n          </td>\n          <td>\n            {partnerSalesSQC()}\n          </td>\n        </tr>\n\n        <tr>\n          <td>\n            <span>\n              Partner Sales Commission Rate\n              <br />\n              渠道销售提成率\n            </span>\n          </td>\n          <td>\n            {(partnerSalesCommissionRate() * 100).toFixed(2)}% (all: {(\n              partnerSalesSQC_SQR_Ratio() * 100\n            ).toFixed(2)}%)\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Partner Income\n            <br />\n            合作伙伴最终收入\n          </td>\n          <td>\n            {partnerIncome()}\n          </td>\n        </tr>\n      {/if}\n\n      <tr>\n        <td>\n          <label for=\"bonus\">\n            Bonus Pool\n            <br />\n            计入公司奖金池?\n          </label>\n        </td>\n        <td>\n          {bonusPool()}\n        </td>\n      </tr>\n\n      <tr>\n        <td>\n          Share in Payment\n          <br />\n          本次回款的公司分利\n        </td>\n        <td>\n          {shareInPayment.toFixed(2)} ({(shareInPaymentRatio * 100).toFixed(2)}%)\n        </td>\n      </tr>\n\n      <tr>\n        <td>\n          Net Income in Payment\n          <br />\n          本次回款的公司真实净利\n        </td>\n        <td>\n          {netIncomeByPayment.toFixed(2)} ({(netIncomeRatioByPayment * 100).toFixed(2)}%)\n        </td>\n      </tr>\n    </table>\n  </form>\n\n  <h1>Commission Rate Table</h1>\n  <table border=\"1\" cellspacing=\"1\" cellpadding=\"1\">\n    {#each Object.entries(commissionRate) as [key, value]}\n      {#if value.text}\n        <tr>\n          <td>{key}</td>\n          <td>{value.text}</td>\n          <td>{(value.rate * 100).toFixed(2)}%</td>\n        </tr>\n      {/if}\n    {/each}\n  </table>\n\n  <div>\n    <h2>DEBUG</h2>\n    * Share in Payment({shareInPayment}) = Bonus Pool({bonusPool()}) + Sales\n    SQC({salesSQC()}) + Sourcer SQC({sourcerSQC()}) + Service SQC({serviceSQC()})\n    + Pay Delivery Service SQC({payDeliveryServiceSQC()}) + Partner Sales SQC({partnerSalesSQC()})\n    - Compensation({compensation})\n  </div>\n</main>\n\n<!-- \n<style>\n  main {\n    text-align: left;\n    padding: 1em;\n    max-width: 240px;\n    margin: 0 auto;\n  }\n\n  h1 {\n    color: #ff3e00;\n    text-transform: uppercase;\n    font-size: 4em;\n    font-weight: 100;\n  }\n\n  @media (min-width: 640px) {\n    main {\n      max-width: none;\n    }\n  }\n</style> -->\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["getCommissionRate","getSQCResult","lib.getSQCResult","lib.getSalesCommissionRate","lib.getCommissionRate"],"mappings":";;;;;IAAA,SAAS,IAAI,GAAG,GAAG;IAanB,SAAS,YAAY,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;IACzD,IAAI,OAAO,CAAC,aAAa,GAAG;IAC5B,QAAQ,GAAG,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;IACzC,KAAK,CAAC;IACN,CAAC;IACD,SAAS,GAAG,CAAC,EAAE,EAAE;IACjB,IAAI,OAAO,EAAE,EAAE,CAAC;IAChB,CAAC;IACD,SAAS,YAAY,GAAG;IACxB,IAAI,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IACD,SAAS,OAAO,CAAC,GAAG,EAAE;IACtB,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC;IACD,SAAS,WAAW,CAAC,KAAK,EAAE;IAC5B,IAAI,OAAO,OAAO,KAAK,KAAK,UAAU,CAAC;IACvC,CAAC;IACD,SAAS,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE;IAC9B,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,OAAO,CAAC,KAAK,QAAQ,KAAK,OAAO,CAAC,KAAK,UAAU,CAAC,CAAC;IAClG,CAAC;IAYD,SAAS,QAAQ,CAAC,GAAG,EAAE;IACvB,IAAI,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC;IACzC,CAAC;IAuQD,SAAS,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE;IAC9B,IAAI,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAoDD,SAAS,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE;IACtC,IAAI,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,IAAI,IAAI,CAAC,CAAC;IAC9C,CAAC;IASD,SAAS,MAAM,CAAC,IAAI,EAAE;IACtB,IAAI,IAAI,IAAI,CAAC,UAAU,EAAE;IACzB,QAAQ,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAK;IACL,CAAC;IACD,SAAS,YAAY,CAAC,UAAU,EAAE,SAAS,EAAE;IAC7C,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;IACnD,QAAQ,IAAI,UAAU,CAAC,CAAC,CAAC;IACzB,YAAY,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;IACvC,KAAK;IACL,CAAC;IACD,SAAS,OAAO,CAAC,IAAI,EAAE;IACvB,IAAI,OAAO,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;IAmBD,SAAS,IAAI,CAAC,IAAI,EAAE;IACpB,IAAI,OAAO,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IACzC,CAAC;IACD,SAAS,KAAK,GAAG;IACjB,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC;IACD,SAAS,KAAK,GAAG;IACjB,IAAI,OAAO,IAAI,CAAC,EAAE,CAAC,CAAC;IACpB,CAAC;IACD,SAAS,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE;IAC/C,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IACnD,IAAI,OAAO,MAAM,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IACnE,CAAC;IA6BD,SAAS,IAAI,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE;IACtC,IAAI,IAAI,KAAK,IAAI,IAAI;IACrB,QAAQ,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;IACxC,SAAS,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,KAAK;IACnD,QAAQ,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;IAC5C,CAAC;IAsDD,SAAS,SAAS,CAAC,KAAK,EAAE;IAC1B,IAAI,OAAO,KAAK,KAAK,EAAE,GAAG,IAAI,GAAG,CAAC,KAAK,CAAC;IACxC,CAAC;IAQD,SAAS,QAAQ,CAAC,OAAO,EAAE;IAC3B,IAAI,OAAO,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IAC1C,CAAC;IA4HD,SAAS,eAAe,CAAC,KAAK,EAAE,KAAK,EAAE;IACvC,IAAI,KAAK,CAAC,KAAK,GAAG,KAAK,IAAI,IAAI,GAAG,EAAE,GAAG,KAAK,CAAC;IAC7C,CAAC;IAiBD,SAAS,aAAa,CAAC,MAAM,EAAE,KAAK,EAAE;IACtC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;IACvD,QAAQ,MAAM,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACzC,QAAQ,IAAI,MAAM,CAAC,OAAO,KAAK,KAAK,EAAE;IACtC,YAAY,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;IACnC,YAAY,OAAO;IACnB,SAAS;IACT,KAAK;IACL,IAAI,MAAM,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;IAC9B,CAAC;IAOD,SAAS,YAAY,CAAC,MAAM,EAAE;IAC9B,IAAI,MAAM,eAAe,GAAG,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAClF,IAAI,OAAO,eAAe,IAAI,eAAe,CAAC,OAAO,CAAC;IACtD,CAAC;IA4DD,SAAS,YAAY,CAAC,IAAI,EAAE,MAAM,EAAE,EAAE,OAAO,GAAG,KAAK,EAAE,UAAU,GAAG,KAAK,EAAE,GAAG,EAAE,EAAE;IAClF,IAAI,MAAM,CAAC,GAAG,QAAQ,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;IAClD,IAAI,CAAC,CAAC,eAAe,CAAC,IAAI,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;IACzD,IAAI,OAAO,CAAC,CAAC;IACb,CAAC;AA0OD;IACA,IAAI,iBAAiB,CAAC;IACtB,SAAS,qBAAqB,CAAC,SAAS,EAAE;IAC1C,IAAI,iBAAiB,GAAG,SAAS,CAAC;IAClC,CAAC;AA8HD;IACA,MAAM,gBAAgB,GAAG,EAAE,CAAC;IAE5B,MAAM,iBAAiB,GAAG,EAAE,CAAC;IAC7B,MAAM,gBAAgB,GAAG,EAAE,CAAC;IAC5B,MAAM,eAAe,GAAG,EAAE,CAAC;IAC3B,MAAM,gBAAgB,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3C,IAAI,gBAAgB,GAAG,KAAK,CAAC;IAC7B,SAAS,eAAe,GAAG;IAC3B,IAAI,IAAI,CAAC,gBAAgB,EAAE;IAC3B,QAAQ,gBAAgB,GAAG,IAAI,CAAC;IAChC,QAAQ,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACrC,KAAK;IACL,CAAC;IAKD,SAAS,mBAAmB,CAAC,EAAE,EAAE;IACjC,IAAI,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC9B,CAAC;IAID;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAM,cAAc,GAAG,IAAI,GAAG,EAAE,CAAC;IACjC,IAAI,QAAQ,GAAG,CAAC,CAAC;IACjB,SAAS,KAAK,GAAG;IACjB;IACA;IACA;IACA,IAAI,IAAI,QAAQ,KAAK,CAAC,EAAE;IACxB,QAAQ,OAAO;IACf,KAAK;IACL,IAAI,MAAM,eAAe,GAAG,iBAAiB,CAAC;IAC9C,IAAI,GAAG;IACP;IACA;IACA,QAAQ,IAAI;IACZ,YAAY,OAAO,QAAQ,GAAG,gBAAgB,CAAC,MAAM,EAAE;IACvD,gBAAgB,MAAM,SAAS,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;IAC7D,gBAAgB,QAAQ,EAAE,CAAC;IAC3B,gBAAgB,qBAAqB,CAAC,SAAS,CAAC,CAAC;IACjD,gBAAgB,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;IACrC,aAAa;IACb,SAAS;IACT,QAAQ,OAAO,CAAC,EAAE;IAClB;IACA,YAAY,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC;IACxC,YAAY,QAAQ,GAAG,CAAC,CAAC;IACzB,YAAY,MAAM,CAAC,CAAC;IACpB,SAAS;IACT,QAAQ,qBAAqB,CAAC,IAAI,CAAC,CAAC;IACpC,QAAQ,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC;IACpC,QAAQ,QAAQ,GAAG,CAAC,CAAC;IACrB,QAAQ,OAAO,iBAAiB,CAAC,MAAM;IACvC,YAAY,iBAAiB,CAAC,GAAG,EAAE,EAAE,CAAC;IACtC;IACA;IACA;IACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;IAC7D,YAAY,MAAM,QAAQ,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;IACjD,YAAY,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;IAC/C;IACA,gBAAgB,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAC7C,gBAAgB,QAAQ,EAAE,CAAC;IAC3B,aAAa;IACb,SAAS;IACT,QAAQ,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC;IACpC,KAAK,QAAQ,gBAAgB,CAAC,MAAM,EAAE;IACtC,IAAI,OAAO,eAAe,CAAC,MAAM,EAAE;IACnC,QAAQ,eAAe,CAAC,GAAG,EAAE,EAAE,CAAC;IAChC,KAAK;IACL,IAAI,gBAAgB,GAAG,KAAK,CAAC;IAC7B,IAAI,cAAc,CAAC,KAAK,EAAE,CAAC;IAC3B,IAAI,qBAAqB,CAAC,eAAe,CAAC,CAAC;IAC3C,CAAC;IACD,SAAS,MAAM,CAAC,EAAE,EAAE;IACpB,IAAI,IAAI,EAAE,CAAC,QAAQ,KAAK,IAAI,EAAE;IAC9B,QAAQ,EAAE,CAAC,MAAM,EAAE,CAAC;IACpB,QAAQ,OAAO,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;IAClC,QAAQ,MAAM,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC;IAC/B,QAAQ,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACxB,QAAQ,EAAE,CAAC,QAAQ,IAAI,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IACpD,QAAQ,EAAE,CAAC,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;IACrD,KAAK;IACL,CAAC;IAeD,MAAM,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC;IAe3B,SAAS,aAAa,CAAC,KAAK,EAAE,KAAK,EAAE;IACrC,IAAI,IAAI,KAAK,IAAI,KAAK,CAAC,CAAC,EAAE;IAC1B,QAAQ,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC/B,QAAQ,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACvB,KAAK;IACL,CAAC;AA0UD;IACA,MAAM,OAAO,IAAI,OAAO,MAAM,KAAK,WAAW;IAC9C,MAAM,MAAM;IACZ,MAAM,OAAO,UAAU,KAAK,WAAW;IACvC,UAAU,UAAU;IACpB,UAAU,MAAM,CAAC,CAAC;IA6WlB,SAAS,eAAe,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,aAAa,EAAE;IACnE,IAAI,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,GAAG,SAAS,CAAC,EAAE,CAAC;IACpD,IAAI,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAC3C,IAAI,IAAI,CAAC,aAAa,EAAE;IACxB;IACA,QAAQ,mBAAmB,CAAC,MAAM;IAClC,YAAY,MAAM,cAAc,GAAG,SAAS,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IACtF;IACA;IACA;IACA,YAAY,IAAI,SAAS,CAAC,EAAE,CAAC,UAAU,EAAE;IACzC,gBAAgB,SAAS,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC,CAAC;IAChE,aAAa;IACb,iBAAiB;IACjB;IACA;IACA,gBAAgB,OAAO,CAAC,cAAc,CAAC,CAAC;IACxC,aAAa;IACb,YAAY,SAAS,CAAC,EAAE,CAAC,QAAQ,GAAG,EAAE,CAAC;IACvC,SAAS,CAAC,CAAC;IACX,KAAK;IACL,IAAI,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;IAC9C,CAAC;IACD,SAAS,iBAAiB,CAAC,SAAS,EAAE,SAAS,EAAE;IACjD,IAAI,MAAM,EAAE,GAAG,SAAS,CAAC,EAAE,CAAC;IAC5B,IAAI,IAAI,EAAE,CAAC,QAAQ,KAAK,IAAI,EAAE;IAC9B,QAAQ,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;IAC/B,QAAQ,EAAE,CAAC,QAAQ,IAAI,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;IAChD;IACA;IACA,QAAQ,EAAE,CAAC,UAAU,GAAG,EAAE,CAAC,QAAQ,GAAG,IAAI,CAAC;IAC3C,QAAQ,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC;IACpB,KAAK;IACL,CAAC;IACD,SAAS,UAAU,CAAC,SAAS,EAAE,CAAC,EAAE;IAClC,IAAI,IAAI,SAAS,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;IACtC,QAAQ,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACzC,QAAQ,eAAe,EAAE,CAAC;IAC1B,QAAQ,SAAS,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACnC,KAAK;IACL,IAAI,SAAS,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IACxD,CAAC;IACD,SAAS,IAAI,CAAC,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,eAAe,EAAE,SAAS,EAAE,KAAK,EAAE,aAAa,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;IAC5G,IAAI,MAAM,gBAAgB,GAAG,iBAAiB,CAAC;IAC/C,IAAI,qBAAqB,CAAC,SAAS,CAAC,CAAC;IACrC,IAAI,MAAM,EAAE,GAAG,SAAS,CAAC,EAAE,GAAG;IAC9B,QAAQ,QAAQ,EAAE,IAAI;IACtB,QAAQ,GAAG,EAAE,EAAE;IACf;IACA,QAAQ,KAAK;IACb,QAAQ,MAAM,EAAE,IAAI;IACpB,QAAQ,SAAS;IACjB,QAAQ,KAAK,EAAE,YAAY,EAAE;IAC7B;IACA,QAAQ,QAAQ,EAAE,EAAE;IACpB,QAAQ,UAAU,EAAE,EAAE;IACtB,QAAQ,aAAa,EAAE,EAAE;IACzB,QAAQ,aAAa,EAAE,EAAE;IACzB,QAAQ,YAAY,EAAE,EAAE;IACxB,QAAQ,OAAO,EAAE,IAAI,GAAG,CAAC,OAAO,CAAC,OAAO,KAAK,gBAAgB,GAAG,gBAAgB,CAAC,EAAE,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC;IAClG;IACA,QAAQ,SAAS,EAAE,YAAY,EAAE;IACjC,QAAQ,KAAK;IACb,QAAQ,UAAU,EAAE,KAAK;IACzB,QAAQ,IAAI,EAAE,OAAO,CAAC,MAAM,IAAI,gBAAgB,CAAC,EAAE,CAAC,IAAI;IACxD,KAAK,CAAC;IACN,IAAI,aAAa,IAAI,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IAC5C,IAAI,IAAI,KAAK,GAAG,KAAK,CAAC;IACtB,IAAI,EAAE,CAAC,GAAG,GAAG,QAAQ;IACrB,UAAU,QAAQ,CAAC,SAAS,EAAE,OAAO,CAAC,KAAK,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,IAAI,KAAK;IACxE,YAAY,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACtD,YAAY,IAAI,EAAE,CAAC,GAAG,IAAI,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE;IACnE,gBAAgB,IAAI,CAAC,EAAE,CAAC,UAAU,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IACjD,oBAAoB,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACvC,gBAAgB,IAAI,KAAK;IACzB,oBAAoB,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IAC7C,aAAa;IACb,YAAY,OAAO,GAAG,CAAC;IACvB,SAAS,CAAC;IACV,UAAU,EAAE,CAAC;IACb,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;IAChB,IAAI,KAAK,GAAG,IAAI,CAAC;IACjB,IAAI,OAAO,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;IAC9B;IACA,IAAI,EAAE,CAAC,QAAQ,GAAG,eAAe,GAAG,eAAe,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;IACpE,IAAI,IAAI,OAAO,CAAC,MAAM,EAAE;IACxB,QAAQ,IAAI,OAAO,CAAC,OAAO,EAAE;IAE7B,YAAY,MAAM,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACnD;IACA,YAAY,EAAE,CAAC,QAAQ,IAAI,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IAChD,YAAY,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAClC,SAAS;IACT,aAAa;IACb;IACA,YAAY,EAAE,CAAC,QAAQ,IAAI,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC;IAC3C,SAAS;IACT,QAAQ,IAAI,OAAO,CAAC,KAAK;IACzB,YAAY,aAAa,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;IACjD,QAAQ,eAAe,CAAC,SAAS,EAAE,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,aAAa,CAAC,CAAC;IAE1F,QAAQ,KAAK,EAAE,CAAC;IAChB,KAAK;IACL,IAAI,qBAAqB,CAAC,gBAAgB,CAAC,CAAC;IAC5C,CAAC;IAiDD;IACA;IACA;IACA,MAAM,eAAe,CAAC;IACtB,IAAI,QAAQ,GAAG;IACf,QAAQ,iBAAiB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IACnC,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IAC7B,KAAK;IACL,IAAI,GAAG,CAAC,IAAI,EAAE,QAAQ,EAAE;IACxB,QAAQ,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE;IACpC,YAAY,OAAO,IAAI,CAAC;IACxB,SAAS;IACT,QAAQ,MAAM,SAAS,IAAI,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IACtF,QAAQ,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACjC,QAAQ,OAAO,MAAM;IACrB,YAAY,MAAM,KAAK,GAAG,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACtD,YAAY,IAAI,KAAK,KAAK,CAAC,CAAC;IAC5B,gBAAgB,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC3C,SAAS,CAAC;IACV,KAAK;IACL,IAAI,IAAI,CAAC,OAAO,EAAE;IAClB,QAAQ,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;IAC9C,YAAY,IAAI,CAAC,EAAE,CAAC,UAAU,GAAG,IAAI,CAAC;IACtC,YAAY,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAChC,YAAY,IAAI,CAAC,EAAE,CAAC,UAAU,GAAG,KAAK,CAAC;IACvC,SAAS;IACT,KAAK;IACL,CAAC;AACD;IACA,SAAS,YAAY,CAAC,IAAI,EAAE,MAAM,EAAE;IACpC,IAAI,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IAChH,CAAC;IACD,SAAS,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE;IAClC,IAAI,YAAY,CAAC,iBAAiB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;IACtD,IAAI,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IACzB,CAAC;IAKD,SAAS,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE;IAC1C,IAAI,YAAY,CAAC,iBAAiB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;IAC9D,IAAI,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;IACjC,CAAC;IAKD,SAAS,UAAU,CAAC,IAAI,EAAE;IAC1B,IAAI,YAAY,CAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC;IAC9C,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC;IACjB,CAAC;IAgBD,SAAS,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,mBAAmB,EAAE,oBAAoB,EAAE;IAC9F,IAAI,MAAM,SAAS,GAAG,OAAO,KAAK,IAAI,GAAG,CAAC,SAAS,CAAC,GAAG,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;IACvG,IAAI,IAAI,mBAAmB;IAC3B,QAAQ,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACzC,IAAI,IAAI,oBAAoB;IAC5B,QAAQ,SAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAC1C,IAAI,YAAY,CAAC,2BAA2B,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC;IACnF,IAAI,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IAC1D,IAAI,OAAO,MAAM;IACjB,QAAQ,YAAY,CAAC,8BAA8B,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC;IAC1F,QAAQ,OAAO,EAAE,CAAC;IAClB,KAAK,CAAC;IACN,CAAC;IACD,SAAS,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE;IAC1C,IAAI,IAAI,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;IACjC,IAAI,IAAI,KAAK,IAAI,IAAI;IACrB,QAAQ,YAAY,CAAC,0BAA0B,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC;IACtE;IACA,QAAQ,YAAY,CAAC,uBAAuB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;IAC1E,CAAC;IACD,SAAS,QAAQ,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE;IACzC,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;IAC3B,IAAI,YAAY,CAAC,sBAAsB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;IACpE,CAAC;IAKD,SAAS,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE;IAClC,IAAI,IAAI,GAAG,EAAE,GAAG,IAAI,CAAC;IACrB,IAAI,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI;IAC/B,QAAQ,OAAO;IACf,IAAI,YAAY,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;IAC3D,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IACD,SAAS,sBAAsB,CAAC,GAAG,EAAE;IACrC,IAAI,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,EAAE,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,QAAQ,IAAI,GAAG,CAAC,EAAE;IACzF,QAAQ,IAAI,GAAG,GAAG,gDAAgD,CAAC;IACnE,QAAQ,IAAI,OAAO,MAAM,KAAK,UAAU,IAAI,GAAG,IAAI,MAAM,CAAC,QAAQ,IAAI,GAAG,EAAE;IAC3E,YAAY,GAAG,IAAI,+DAA+D,CAAC;IACnF,SAAS;IACT,QAAQ,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;IAC7B,KAAK;IACL,CAAC;IACD,SAAS,cAAc,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAC1C,IAAI,KAAK,MAAM,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;IAC9C,QAAQ,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;IACtC,YAAY,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,+BAA+B,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IACjF,SAAS;IACT,KAAK;IACL,CAAC;IA+BD;IACA;IACA;IACA,MAAM,kBAAkB,SAAS,eAAe,CAAC;IACjD,IAAI,WAAW,CAAC,OAAO,EAAE;IACzB,QAAQ,IAAI,CAAC,OAAO,KAAK,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;IAChE,YAAY,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;IAC7D,SAAS;IACT,QAAQ,KAAK,EAAE,CAAC;IAChB,KAAK;IACL,IAAI,QAAQ,GAAG;IACf,QAAQ,KAAK,CAAC,QAAQ,EAAE,CAAC;IACzB,QAAQ,IAAI,CAAC,QAAQ,GAAG,MAAM;IAC9B,YAAY,OAAO,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC;IAC5D,SAAS,CAAC;IACV,KAAK;IACL,IAAI,cAAc,GAAG,GAAG;IACxB,IAAI,aAAa,GAAG,GAAG;IACvB;;ICvtEA;;IAEG;IACH,MAAM,cAAc,GAAkD;;;;IAKpE,IAAA,sBAAsB,EAAE;IACtB,QAAA,IAAI,EAAE,gBAAgB;IACtB,QAAA,IAAI,EAAE,IAAI;IACX,KAAA;;;;;IAKD,IAAA,0BAA0B,EAAE;IAC1B,QAAA,IAAI,EAAE,cAAc;IACpB,QAAA,IAAI,EAAE,IAAI;IACX,KAAA;;;IAGD,IAAA,oBAAoB,EAAE;IACpB,QAAA,IAAI,EAAE,YAAY;IAClB,QAAA,IAAI,EAAE,IAAI;IACX,KAAA;;;;;IAKD,IAAA,wBAAwB,EAAE;IACxB,QAAA,IAAI,EAAE,YAAY;IAClB,QAAA,IAAI,EAAE,IAAI;IACX,KAAA;;;IAID,IAAA,sBAAsB,EAAE;IACtB,QAAA,IAAI,EAAE,gBAAgB;IACtB,QAAA,IAAI,EAAE,IAAI;IACX,KAAA;;;;;IAKD,IAAA,0BAA0B,EAAE;IAC1B,QAAA,IAAI,EAAE,gBAAgB;IACtB,QAAA,IAAI,EAAE,CAAC;IACR,KAAA;IAED;;;IAGG;IACH,IAAA,qBAAqB,EAAE;IACrB,QAAA,IAAI,EAAE,aAAa;IACnB,QAAA,IAAI,EAAE,GAAG;IACV,KAAA;IAED;;IAEG;IACH,IAAA,gBAAgB,EAAE;IAChB,QAAA,IAAI,EAAE,aAAa;IACnB,QAAA,IAAI,EAAE,IAAI;IACX,KAAA;IAED;;IAEG;IACH,IAAA,uBAAuB,EAAE;IACvB,QAAA,IAAI,EAAE,WAAW;IACjB,QAAA,IAAI,EAAE,GAAG;IACV,KAAA;;IAGD,IAAA,iBAAiB,EAAE;IACjB,QAAA,IAAI,EAAE,SAAS;IACf,QAAA,IAAI,EAAE,CAAC;IACR,KAAA;IACD,IAAA,eAAe,EAAE;IACf,QAAA,IAAI,EAAE,SAAS;IACf,QAAA,IAAI,EAAE,IAAI;IACX,KAAA;IACD,IAAA,iBAAiB,EAAE;IACjB,QAAA,IAAI,EAAE,YAAY;IAClB,QAAA,IAAI,EAAE,IAAI;IACX,KAAA;IACD,IAAA,iBAAiB,EAAE;IACjB,QAAA,IAAI,EAAE,YAAY;IAClB,QAAA,IAAI,EAAE,IAAI;IACX,KAAA;IACD,IAAA,iBAAiB,EAAE;IACjB,QAAA,IAAI,EAAE,YAAY;IAClB,QAAA,IAAI,EAAE,IAAI;IACX,KAAA;IACD,IAAA,iBAAiB,EAAE;IACjB,QAAA,IAAI,EAAE,SAAS;IACf,QAAA,IAAI,EAAE,CAAC;IACR,KAAA;IACD,IAAA,oBAAoB,EAAE;IACpB,QAAA,IAAI,EAAE,SAAS;IACf,QAAA,IAAI,EAAE,CAAC;IACR,KAAA;IACD,IAAA,kBAAkB,EAAE;IAClB,QAAA,IAAI,EAAE,SAAS;IACf,QAAA,IAAI,EAAE,IAAI;IACX,KAAA;IACD,IAAA,oBAAoB,EAAE;IACpB,QAAA,IAAI,EAAE,YAAY;IAClB,QAAA,IAAI,EAAE,IAAI;IACX,KAAA;IACD,IAAA,oBAAoB,EAAE;IACpB,QAAA,IAAI,EAAE,YAAY;IAClB,QAAA,IAAI,EAAE,IAAI;IACX,KAAA;IACD,IAAA,oBAAoB,EAAE;IACpB,QAAA,IAAI,EAAE,YAAY;IAClB,QAAA,IAAI,EAAE,IAAI;IACX,KAAA;IACD,IAAA,oBAAoB,EAAE;IACpB,QAAA,IAAI,EAAE,SAAS;IACf,QAAA,IAAI,EAAE,CAAC;IACR,KAAA;KACF;;IC9HD;IAKA;;IAEG;IACH,IAAY,aAIT,CAAA;IAJH,CAAA,UAAY,aAAa,EAAA;IACrB,IAAA,aAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;IACrB,IAAA,aAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;IACzB,IAAA,aAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;IACrB,CAAC,EAJS,aAAa,KAAb,aAAa,GAItB,EAAA,CAAA,CAAA,CAAA;IAED,IAAY,aASX,CAAA;IATD,CAAA,UAAY,aAAa,EAAA;;;;IAKvB,IAAA,aAAA,CAAA,GAAA,CAAA,GAAA,GAAO,CAAA;IACP,IAAA,aAAA,CAAA,GAAA,CAAA,GAAA,GAAO,CAAA;IACP,IAAA,aAAA,CAAA,GAAA,CAAA,GAAA,GAAO,CAAA;IAET,CAAC,EATW,aAAa,KAAb,aAAa,GASxB,EAAA,CAAA,CAAA,CAAA;IAoBH,IAAY,YAGX,CAAA;IAHD,CAAA,UAAY,YAAY,EAAA;IACpB,IAAA,YAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;IACX,IAAA,YAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;IACvB,CAAC,EAHW,YAAY,KAAZ,YAAY,GAGvB,EAAA,CAAA,CAAA,CAAA;IAsBD;;IAEG;IACH,IAAK,UAIJ,CAAA;IAJD,CAAA,UAAK,UAAU,EAAA;IACX,IAAA,UAAA,CAAA,UAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAO,CAAA;IACP,IAAA,UAAA,CAAA,UAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,WAAS,CAAA;IACT,IAAA,UAAA,CAAA,UAAA,CAAA,cAAA,CAAA,GAAA,CAAA,CAAA,GAAA,cAAY,CAAA;IAChB,CAAC,EAJI,UAAU,KAAV,UAAU,GAId,EAAA,CAAA,CAAA,CAAA;IAED;;IAEG;IACH,IAAY,UAaX,CAAA;IAbD,CAAA,UAAY,UAAU,EAAA;IACpB;;IAEG;IACH,IAAA,UAAA,CAAA,UAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAO,CAAA;IACP;;IAEG;IACH,IAAA,UAAA,CAAA,UAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAO,CAAA;IACP;;IAEG;IACH,IAAA,UAAA,CAAA,UAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,WAAS,CAAA;IACX,CAAC,EAbW,UAAU,KAAV,UAAU,GAarB,EAAA,CAAA,CAAA,CAAA;IAqBD;;IAEG;UACU,SAAS,CAAA;IAclB,IAAA,WAAA,CAAY,MAA0B,EAAA;IAClC,QAAA,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;SAC/B;IAED,IAAA,IAAI,aAAa,GAAA;IACf,QAAA,IAAI,IAAI,CAAC,SAAS,IAAI,aAAa,CAAC,QAAQ,EAAE;IAC5C,YAAA,OAAO,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC;IAC1C,SAAA;IAED,QAAA,OAAO,CAAC,CAAC;SACV;IACJ,CAAA;IAEM,MAAM,qBAAqB,GAAG,CAAC,WAAW,EAAE,YAAY,KAAI;;IAEjE,IAAA,IAAI,WAAW,IAAI,aAAa,CAAC,QAAQ;YACvC,OAAO,iBAAiB,CAAC,WAAW,EAAE,SAAS,EAAE,YAAY,CAAC,CAAC;IACjE,IAAA,OAAO,CAAC,CAAC;IACX,CAAC,CAAC;IAEF;;IAEG;IACI,MAAM,qBAAqB,GAAG,CAAC,SAAS,EAAE,YAAY,KAAI;IAC/D,IAAA,IAAI,SAAS,IAAI,aAAa,CAAC,QAAQ;YACrC,OAAO,iBAAiB,CAAC,aAAa,CAAC,QAAQ,EAAE,SAAS,EAAE,YAAY,CAAC,CAAC;IAC5E,IAAA,OAAO,CAAC,CAAC;IACX,CAAC,CAAC;IAEF;;IAEG;aACa,YAAY,CAAC,OAAgB,EAAE,eAAuB,CAAC,EAAA;IAErE,IAAA,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;IAClC,IAAA,MAAM,YAAY,GAAG,QAAQ,CAAC,IAAI,CAAC;IACnC,IAAA,MAAM,YAAY,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC7D,MAAM,WAAW,GAAG,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;QAC/C,MAAM,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QAE3C,MAAM,aAAa,GAAG,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC;QACzD,MAAM,YAAY,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QAE9C,IAAI,QAAQ,GAAG,CAAC,CAAC;IACjB,IAAA,IAAI,SAAS,IAAI,aAAa,CAAC,OAAO,EAAE;IACpC,QAAA,QAAQ,GAAG,aAAa,GAAG,sBAAsB,CAAC,SAAS,EAAE,YAAY,EAAE,YAAY,CAAC,CAAC;IAC1F,KAAA;IAAM,SAAA,IAAI,SAAS,IAAI,aAAa,CAAC,QAAQ,EAAE;YAC9C,QAAQ,GAAG,YAAY,GAAG,sBAAsB,CAAC,SAAS,EAAE,YAAY,EAAE,YAAY,CAAC,CAAC;IACzF,KAAA;IAAM,SAAA;YACL,QAAQ,GAAG,YAAY,GAAG,sBAAsB,CAAC,SAAS,EAAE,YAAY,EAAE,YAAY,CAAC,CAAC;IACzF,KAAA;;QAGH,IAAI,UAAU,GAAG,CAAC,CAAC;;IAEnB,IAAA,IAAI,SAAS,IAAI,aAAa,CAAC,QAAQ,EAAE;YACvC,UAAU,GAAG,YAAY,GAAG,qBAAqB,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;IAC9E,KAAA;IAAM,SAAA;;IAEL,QAAA,UAAU,GAAG,CAAC,YAAY,GAAG,QAAQ,IAAI,qBAAqB,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;IAC3F,KAAA;QAED,MAAM,UAAU,GAAG,YAAY,GAAG,qBAAqB,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;QAIjF,IAAI,eAAe,GAAG,CAAC,CAAA;IACvB,IAAA,IAAI,SAAS,IAAI,aAAa,CAAC,QAAQ,EAAE;IACvC,QAAA,eAAe,GAAG,CAAC,YAAY,GAAG,QAAQ,IAAI,iBAAiB,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;IAC7F,KAAA;QAED,MAAM,SAAS,GAAG,YAAY,GAAG,iBAAiB,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;IAExE,IAAA,MAAM,GAAG,GAAG,IAAI,SAAS,CAAC;IACtB,QAAA,UAAU,EAAE,UAAU;IACtB,QAAA,QAAQ,EAAE,QAAQ;IAClB,QAAA,UAAU,EAAE,UAAU;;IAEtB,QAAA,eAAe,EAAE,eAAe;IAChC,QAAA,SAAS,EAAE,SAAS;IACpB,QAAA,YAAY,EAAE,YAAY;IAE1B,QAAA,SAAS,EAAE,SAAS;IACvB,KAAA,CAAC,CAAA;IACF,IAAA,OAAO,GAAG,CAAC;IAEb,CAAC;IACD;;IAEG;IACH,IAAY,cAGX,CAAA;IAHD,CAAA,UAAY,cAAc,EAAA;IACtB,IAAA,cAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;IACX,IAAA,cAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;IACrB,CAAC,EAHW,cAAc,KAAd,cAAc,GAGzB,EAAA,CAAA,CAAA,CAAA;IAGe,SAAA,MAAM,CAAC,UAAkB,EAAE,aAAqB,EAAA;IAC9D,IAAA,OAAO,UAAU,IAAI,aAAa,GAAG,EAAE,CAAC,CAAC;IAC3C,CAAC;IAEe,SAAA,MAAM,CAAC,UAAkB,EAAE,aAAqB,EAAA;QAC9D,OAAO,UAAU,GAAG,aAAa,CAAC;IACpC,CAAC;IAED;;IAEG;IACa,SAAA,MAAM,CAAC,cAAsB,EAAE,aAAqB,EAAA;IAClE,IAAA,MAAM,oBAAoB,GAAG,aAAa,GAAG,EAAE,CAAC;QAChD,OAAO,cAAc,GAAG,oBAAoB;YAC1C,CAAC,CAAC,cAAc,IAAI,oBAAoB,GAAG,CAAC,CAAC,IAAI,oBAAoB;IACnE,YAAA,GAAG,CAAC;IACV,CAAC;IAED;;IAEG;IACI,MAAM,sBAAsB,GAAG,CAAC,SAAiB,EAAE,YAAoB,EAAE,YAAoB,KAAI;QACtG,IAAI,SAAS,IAAI,UAAU,EAAE;YACzB,OAAO,iBAAiB,CAAC,UAAU,EAAE,OAAO,EAAE,YAAY,CAAC,CAAC;IAC/D,KAAA;IAAM,SAAA;YACH,OAAO,iBAAiB,CAAC,SAAS,EAAE,OAAO,EAAE,YAAY,CAAC,CAAC;IAC9D,KAAA;IACH,CAAC,CAAC;IAEF;;IAEG;IACI,MAAM,uBAAuB,GAAG,CAAC,aAAqB,EAAE,IAAI,EAAE,KAAK,GAAG,SAAS,KAAI;IACxF,IAAA,MAAM,GAAG,GACP,KAAK,KAAK,SAAS;IACjB,UAAE,CAAA,EAAG,aAAa,CAAA,CAAA,EAAI,IAAI,CAAE,CAAA;cAC1B,GAAG,aAAa,CAAA,CAAA,EAAI,IAAI,CAAI,CAAA,EAAA,KAAK,EAAE,CAAC;IAC1C,IAAA,MAAM,GAAG,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC;IAChC,IAAA,OAAO,GAAG,CAAC;IACb,CAAC,CAAC;IAEF;;IAEG;IACI,MAAM,iBAAiB,GAAG,CAAC,aAAa,EAAE,IAAI,EAAE,KAAK,GAAG,SAAS,KAAI;QAC1E,MAAM,GAAG,GAAG,uBAAuB,CAAC,aAAa,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;IAChE,IAAA,IAAI,GAAG;YAAE,OAAO,GAAG,CAAC,IAAI,CAAC;IACzB,IAAA,OAAO,CAAC,CAAC;IACX,CAAC,CAAC;IAEF;;IAEG;IACG,SAAU,IAAI,CAChB,KAA4B,EAC5B,SAAmC,EACnC,OAAgC,EAChC,WAAwC,EAAA;;;IAK5C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICoIiB,CAAA,IAAA,QAAA,UAAA,GAAE,KAAC,IAAI,GAAA,EAAA,CAAA;;;;;;;;;;IADK,GAAA,MAAA,CAAA,OAAA,GAAA,kBAAA,UAAA,GAAE,KAAC,EAAE,CAAA;;;;;OAApB,UAEQ,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,CAAA,CAAA;;;;;IADL,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,sBAAA,CAAA,IAAA,QAAA,MAAA,QAAA,UAAA,GAAE,KAAC,IAAI,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;;IADK,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,sBAAA,CAAA,IAAA,kBAAA,MAAA,kBAAA,UAAA,GAAE,KAAC,EAAE,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6CAgCrB,GAAoB,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA;;;;;;;;;;iBArBY,gDAE/B,CAAA,CAAA;;iBAAK,6BAEP,CAAA,CAAA;;;;;;;iBAWC,8CAED,CAAA,CAAA;;iBAAK,2BAEP,CAAA,CAAA;;;;;;;;;;;;;;;;;;;OArBF,UAeI,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;OAdF,UAMI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;OALF,UAIO,CAAA,GAAA,EAAA,KAAA,CAAA,CAAA;;OAFL,UAAK,CAAA,KAAA,EAAA,GAAA,CAAA,CAAA;;;OAIT,UAMI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;OALF,UAIC,CAAA,GAAA,EAAA,KAAA,CAAA,CAAA;uDADa,GAAoB,CAAA,EAAA,CAAA,CAAA,CAAA;;OAItC,UASI,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;OARF,UAII,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;;OAFF,UAAK,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;;;OAGP,UAEI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;+GAZY,GAAoB,CAAA,EAAA,CAAA,EAAA;wDAApB,GAAoB,CAAA,EAAA,CAAA,CAAA,CAAA;;;6GAWjC,GAAoB,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iBAQF,iCAEjB,CAAA,CAAA;;iBAAK,2BAEP,CAAA,CAAA;;;;;;;iBAQC,8CAED,CAAA,CAAA;;iBAAM,YACR,CAAA,CAAA;;;yBAEG,GAAG,CAAA,EAAA,CAAA,CAAA,CAAA;;;;iBAIH,+CAED,CAAA,CAAA;;kBAAM,WACR,CAAA,CAAA;;;0BAEG,GAAG,CAAA,EAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;OA5BR,UAWI,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;OAVF,UAMI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;OALF,UAIO,CAAA,GAAA,EAAA,KAAA,CAAA,CAAA;;OAFL,UAAK,CAAA,KAAA,EAAA,GAAA,CAAA,CAAA;;;OAIT,UAEI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;OADF,UAAgE,CAAA,GAAA,EAAA,KAAA,CAAA,CAAA;iDAAjB,GAAc,CAAA,EAAA,CAAA,CAAA,CAAA;;OAIjE,UAQI,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;OAPF,UAGI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;;OADF,UAAM,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;;;OAER,UAEI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;;;OAEN,UAQI,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;OAPF,UAGI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;;OADF,UAAM,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;;;OAER,UAEI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;kGApB6C,GAAc,CAAA,EAAA,CAAA,EAAA;kDAAd,GAAc,CAAA,EAAA,CAAA,CAAA,CAAA;;;2DAU5D,GAAG,CAAA,EAAA,CAAA,CAAA,CAAA;4DASH,GAAG,CAAA,EAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;IAiBC,CAAA,IAAA,QAAA,UAAA,GAAE,KAAC,IAAI,GAAA,EAAA,CAAA;;;;;;;;;;IADK,GAAA,MAAA,CAAA,OAAA,GAAA,kBAAA,UAAA,GAAE,KAAC,EAAE,CAAA;;;;;OAApB,UAEQ,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,CAAA,CAAA;;;;;IADL,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,qBAAA,GAAA,IAAA,QAAA,MAAA,QAAA,UAAA,GAAE,KAAC,IAAI,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;;IADK,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,qBAAA,GAAA,IAAA,kBAAA,MAAA,kBAAA,UAAA,GAAE,KAAC,EAAE,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yCAsErB,GAAgB,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA;;;;;;;iBANhB,kCAED,CAAA,CAAA;;iBAAK,uBAEP,CAAA,CAAA;;;;;;;;;;OALF,UASI,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OARF,UAII,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;OAFF,UAAK,CAAA,GAAA,EAAA,EAAA,CAAA,CAAA;;;OAGP,UAEI,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;oGADD,GAAgB,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;yCAahB,GAAgB,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA;;;;;;;iBANhB,kCAED,CAAA,CAAA;;iBAAK,uBAEP,CAAA,CAAA;;;;;;;;;;OALF,UASI,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OARF,UAII,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;OAFF,UAAK,CAAA,GAAA,EAAA,EAAA,CAAA,CAAA;;;OAGP,UAEI,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;oGADD,GAAgB,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;IAiBZ,CAAA,IAAA,QAAA,qBAAA,GAAa,KAAC,IAAI,GAAA,EAAA,CAAA;;;;;;;;;;IADN,GAAA,MAAA,CAAA,OAAA,GAAA,kBAAA,qBAAA,GAAa,KAAC,EAAE,CAAA;;;;;OAA/B,UAEQ,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,CAAA,CAAA;;;;;IADL,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,sBAAA,GAAA,IAAA,QAAA,MAAA,QAAA,qBAAA,GAAa,KAAC,IAAI,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;;IADN,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,sBAAA,GAAA,IAAA,kBAAA,MAAA,kBAAA,qBAAA,GAAa,KAAC,EAAE,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;IAoB5B,CAAA,IAAA,QAAA,qBAAA,GAAa,KAAC,IAAI,GAAA,EAAA,CAAA;;;;;;;;;;IADN,GAAA,MAAA,CAAA,OAAA,GAAA,kBAAA,qBAAA,GAAa,KAAC,EAAE,CAAA;;;;;OAA/B,UAEQ,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,CAAA,CAAA;;;;;IADL,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,sBAAA,GAAA,IAAA,QAAA,MAAA,QAAA,qBAAA,GAAa,KAAC,IAAI,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;;IADN,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,sBAAA,GAAA,IAAA,kBAAA,MAAA,kBAAA,qBAAA,GAAa,KAAC,EAAE,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0CAwCxB,GAAa,CAAA,EAAA,CAAA,CAAA;;;;sCAAlB,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;iBARiB,0CAEvB,CAAA,CAAA;;iBAAK,sBAEP,CAAA,CAAA;;;;;;;;;;;;;;4BAGwC,GAAY,CAAA,EAAA,CAAA,KAAA,KAAA,CAAA,EAAA,mBAAA,CAAA,gCAAA,GAAA,CAAA,EAAA,CAAA,CAAA,IAAA,CAAA,MAAA,CAAA,CAAA,CAAA;;;;;;OATxD,UAiBI,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAhBF,UAMI,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;OALF,UAIO,CAAA,GAAA,EAAA,KAAA,CAAA,CAAA;;OAFL,UAAK,CAAA,KAAA,EAAA,EAAA,CAAA,CAAA;;;OAIT,UAQI,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;OAPF,UAMQ,CAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;;;;;8CANgC,GAAY,CAAA,EAAA,CAAA,CAAA,CAAA;;;;;;;;;yCAC3C,GAAa,CAAA,EAAA,CAAA,CAAA;;;;qCAAlB,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;0CAAJ,MAAI,CAAA;;;;+CADgC,GAAY,CAAA,EAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;IAG7C,CAAA,IAAA,QAAA,aAAA,GAAK,KAAC,IAAI,GAAA,EAAA,CAAA;;;;;;;;;;IADE,GAAA,MAAA,CAAA,OAAA,GAAA,kBAAA,aAAA,GAAK,KAAC,EAAE,CAAA;;;;;OAAvB,UAEQ,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,CAAA,CAAA;;;;;IADL,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,qBAAA,SAAA,IAAA,QAAA,MAAA,QAAA,aAAA,GAAK,KAAC,IAAI,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;;IADE,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,qBAAA,SAAA,IAAA,kBAAA,MAAA,kBAAA,aAAA,GAAK,KAAC,EAAE,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iBAYX,iDAEd,CAAA,CAAA;;iBAAK,0BAEP,CAAA,CAAA;;;kCAGC,GAAY,CAAA,EAAA,CAAA,CAAA,CAAA;;;;;;;;;OATjB,UAWI,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAVF,UAMI,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;OALF,UAIO,CAAA,GAAA,EAAA,KAAA,CAAA,CAAA;;OAFL,UAAK,CAAA,KAAA,EAAA,EAAA,CAAA,CAAA;;;OAIT,UAEI,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;gFADD,GAAY,CAAA,EAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCASZ,GAAY,CAAA,EAAA,CAAA,CAAA,CAAA;;;;;;OAHjB,UAKI,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAJF,UAAa,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;OACb,UAEI,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;gFADD,GAAY,CAAA,EAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAeX,CAAA,IAAA,QAAA,GAAA,2BAAA,GAAqB,CAAK,EAAA,CAAA,EAAA,GAAA,GAAG,EAAE,OAAO,CAAC,CAAC,CAAA,GAAA,EAAA,CAAA;;;;;;;;;;;;mCAYzC,GAAU,CAAA,CAAA,CAAA,EAAA,CAAG,OAAO,CAAC,CAAC,CAAA,GAAA,EAAA,CAAA;;;;;;;;iBAnBlB,yCAEH,CAAA,CAAA;;iBAAK,4BAEP,CAAA,CAAA;;;;iBAG4C,GAC9C,CAAA,CAAA;;;;;iBAIO,0DAEH,CAAA,CAAA;;iBAAK,mCAEP,CAAA,CAAA;;;;;;;;;;;;;;;;OAlBJ,UAWI,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;OAVF,UAMI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;OALF,UAIM,CAAA,GAAA,EAAA,KAAA,CAAA,CAAA;;OAFJ,UAAK,CAAA,KAAA,EAAA,GAAA,CAAA,CAAA;;;OAIT,UAEI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;;;;OAEN,UAWI,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;OAVF,UAMI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;OALF,UAIM,CAAA,GAAA,EAAA,KAAA,CAAA,CAAA;;OAFJ,UAAK,CAAA,KAAA,EAAA,GAAA,CAAA,CAAA;;;OAIT,UAEI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;;;;IAbA,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,6BAAA,CAAA,IAAA,QAAA,MAAA,QAAA,GAAA,2BAAA,GAAqB,CAAK,EAAA,CAAA,EAAA,GAAA,GAAG,EAAE,OAAO,CAAC,CAAC,CAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;oFAYzC,GAAU,CAAA,CAAA,CAAA,EAAA,CAAG,OAAO,CAAC,CAAC,CAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;iBAYjB,oDAEJ,CAAA,CAAA;;iBAAK,yBAEP,CAAA,CAAA;;;;;OAFE,UAAK,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iBANiC,uCAEtC,CAAA,CAAA;;iBAAK,0BAEP,CAAA,CAAA;;;;;OAFE,UAAK,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iBAoBD,wCAEJ,CAAA,CAAA;;iBAAK,6BAEP,CAAA,CAAA;;;;;OAFE,UAAK,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iBANiC,wDAEtC,CAAA,CAAA;;iBAAK,iCAEP,CAAA,CAAA;;;;;OAFE,UAAK,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAwBL,CAAA,IAAA,QAAA,GAAA,2BAAA,GAAqB,CAAK,EAAA,CAAA,EAAA,GAAA,GAAG,EAAE,OAAO,CAAC,CAAC,CAAA,GAAA,EAAA,CAAA;;;;;;;;;;;;mCAYzC,GAAU,CAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA;;;;;;;;iBAnBN,2CAEH,CAAA,CAAA;;iBAAK,0BAEP,CAAA,CAAA;;;;iBAG4C,GAC9C,CAAA,CAAA;;;;;iBAIO,4DAEH,CAAA,CAAA;;iBAAK,iCAEP,CAAA,CAAA;;;;;;;;;;;;;;;;OAlBJ,UAWI,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;OAVF,UAMI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;OALF,UAIM,CAAA,GAAA,EAAA,KAAA,CAAA,CAAA;;OAFJ,UAAK,CAAA,KAAA,EAAA,GAAA,CAAA,CAAA;;;OAIT,UAEI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;;;;OAEN,UAWI,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;OAVF,UAMI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;OALF,UAIM,CAAA,GAAA,EAAA,KAAA,CAAA,CAAA;;OAFJ,UAAK,CAAA,KAAA,EAAA,GAAA,CAAA,CAAA;;;OAIT,UAEI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;;;;IAbA,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,6BAAA,CAAA,IAAA,QAAA,MAAA,QAAA,GAAA,2BAAA,GAAqB,CAAK,EAAA,CAAA,EAAA,GAAA,GAAG,EAAE,OAAO,CAAC,CAAC,CAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;mFAYzC,GAAU,CAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8CAeV,GAAqB,CAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA;;;;;;;;iBAPjB,iCAEH,CAAA,CAAA;;iBAAK,wBAEP,CAAA,CAAA;;;;;;;;;;;OANJ,UAWI,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAVF,UAMI,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;OALF,UAIM,CAAA,GAAA,EAAA,IAAA,CAAA,CAAA;;OAFJ,UAAK,CAAA,IAAA,EAAA,EAAA,CAAA,CAAA;;;OAIT,UAEI,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;yGADD,GAAqB,CAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;wCA4BrB,GAAe,CAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA;;;;;;;;;;;IAad,CAAA,IAAA,QAAA,GAAA,gCAAA,GAA0B,CAAK,EAAA,CAAA,EAAA,GAAA,GAAG,EAAE,OAAO,CAAC,CAAC,CAAA,GAAA,EAAA,CAAA;;;IAC7C,CAAA,IAAA,SAAA,GAAA,+BAAA,GAAyB,CAAK,EAAA,CAAA,EAAA,GAAA,GAAA,EAC9B,OAAO,CAAC,CAAC,CAAA,GAAA,EAAA,CAAA;;;;;;;;;;;uCAUV,GAAa,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA;;;;;;;;iBAhCT,gEAEH,CAAA,CAAA;;iBAAK,gCAEP,CAAA,CAAA;;;;;;;;iBASK,+CAEH,CAAA,CAAA;;iBAAK,yBAEP,CAAA,CAAA;;;;iBAGiD,UAAQ,CAAA,CAAA;;kBAE5C,IACf,CAAA,CAAA;;;;kBAGG,8BAED,CAAA,CAAA;;kBAAK,wBAEP,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;OAhCF,UAWI,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;OAVF,UAMI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;OALF,UAIM,CAAA,GAAA,EAAA,KAAA,CAAA,CAAA;;OAFJ,UAAK,CAAA,KAAA,EAAA,GAAA,CAAA,CAAA;;;OAIT,UAEI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;;;OAGN,UAaI,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;OAZF,UAMI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;OALF,UAIM,CAAA,GAAA,EAAA,KAAA,CAAA,CAAA;;OAFJ,UAAK,CAAA,KAAA,EAAA,GAAA,CAAA,CAAA;;;OAIT,UAII,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;;;;;;OAEN,UASI,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;OARF,UAII,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;;OAFF,UAAK,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;;;OAGP,UAEI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;;;;6FA1BD,GAAe,CAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;IAad,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,kCAAA,UAAA,IAAA,QAAA,MAAA,QAAA,GAAA,gCAAA,GAA0B,CAAK,EAAA,CAAA,EAAA,GAAA,GAAG,EAAE,OAAO,CAAC,CAAC,CAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;IAC7C,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,iCAAA,CAAA,IAAA,SAAA,MAAA,SAAA,GAAA,+BAAA,GAAyB,CAAK,EAAA,CAAA,EAAA,GAAA,GAAA,EAC9B,OAAO,CAAC,CAAC,CAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,GAAA,EAAA,SAAA,CAAA,CAAA;kGAUV,GAAa,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,GAAA,EAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;4BA+CX,GAAG,CAAA,EAAA,CAAA,GAAA,EAAA,CAAA;;;;IACH,CAAA,IAAA,QAAA,aAAA,GAAK,KAAC,IAAI,GAAA,EAAA,CAAA;;;;IACT,CAAA,IAAA,QAAA,GAAA,WAAA,GAAK,KAAC,IAAI,GAAG,GAAG,EAAE,OAAO,CAAC,CAAC,CAAA,GAAA,EAAA,CAAA;;;;;;;;;;;;;;;;iBAAE,GAAC,CAAA,CAAA;;;;;;;;OAHtC,UAII,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAHF,UAAa,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;OACb,UAAoB,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;OACpB,UAAwC,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;IAJvC,CAAA,IAAA,QAAA,aAAA,GAAK,KAAC,IAAI,IAAA,eAAA,CAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;IAAV,GAAA,cAAA,GAAK,KAAC,IAAI,EAAA,QAAA,CAAA,CAAA,CAAA,GAAA,EAAA,KAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAzWV,CAAA,IAAA,SAAA,oBAAA,GAAY,OAAG,GAAG,GAAA,EAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA4MlB,CAAA,IAAA,SAAA,+BAAA,GAAuB,SAAK,GAAG,GAAA,EAAA,CAAA;;;;;;;;;kCAkB/B,GAAQ,CAAA,CAAA,CAAA,EAAA,CAAG,OAAO,CAAC,CAAC,CAAA,GAAA,EAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;mCA4GpB,GAAS,CAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA;;;;;;;;;;wCAWT,GAAc,CAAA,EAAA,CAAA,CAAC,OAAO,CAAC,CAAC,CAAA,GAAA,EAAA,CAAA;;;IAAM,CAAA,IAAA,SAAA,GAAA,yBAAA,GAAmB,CAAG,EAAA,CAAA,GAAA,GAAG,EAAE,OAAO,CAAC,CAAC,CAAA,GAAA,EAAA,CAAA;;;;;;;;;;;4CAWlE,GAAkB,CAAA,EAAA,CAAA,CAAC,OAAO,CAAC,CAAC,CAAA,GAAA,EAAA,CAAA;;;IAAM,CAAA,IAAA,SAAA,GAAA,6BAAA,GAAuB,CAAG,CAAA,CAAA,GAAA,GAAG,EAAE,OAAO,CAAC,CAAC,CAAA,GAAA,EAAA,CAAA;;;;;;;;;;;;;mCAqB9B,GAAS,CAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA;;;kCACvD,GAAQ,CAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA;;;oCAAoB,GAAU,CAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA;;;oCAAoB,GAAU,CAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA;;;gDAC7C,GAAqB,CAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA;;;0CAA0B,GAAe,CAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA;;;;;;;2CAxe3E,GAAc,CAAA,CAAA,CAAA,CAAA;;;;sCAAnB,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;IASP,CAAA,IAAA,SAAA,qBAAA,GAAa,OAAI,QAAQ,IAAA,kBAAA,CAAA,GAAA,CAAA,CAAA;IA6BzB,CAAA,IAAA,SAAA,qBAAA,GAAa,OAAI,SAAS,IAAA,kBAAA,CAAA,GAAA,CAAA,CAAA;0CA4ClB,GAAa,CAAA,EAAA,CAAA,CAAA;;;;sCAAlB,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;IA+DP,CAAA,IAAA,SAAA,GAAA,mBAAA,GAAa,CAAI,CAAA,CAAA,IAAA,QAAQ,sBAAI,GAAa,OAAI,SAAS,KAAA,kBAAA,CAAA,GAAA,CAAA,CAAA;IAavD,CAAA,IAAA,SAAA,GAAA,mBAAA,GAAa,CAAI,CAAA,CAAA,IAAA,QAAQ,sBAAI,GAAa,OAAI,SAAS,KAAA,kBAAA,CAAA,GAAA,CAAA,CAAA;2CAuB/C,GAAc,CAAA,EAAA,CAAA,CAAA;;;;sCAAnB,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;2CAmBC,GAAc,CAAA,EAAA,CAAA,CAAA;;;;sCAAnB,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;oCA8BP,GAAS,CAAA,EAAA,CAAA,IAAI,aAAa,CAAC,OAAO,kBAAI,GAAS,CAAA,EAAA,CAAA,IAAI,aAAa,CAAC,UAAU,KAAA,iBAAA,CAAA,GAAA,CAAA,CAAA;IAqB3E,CAAA,IAAA,SAAA,GAAA,mBAAA,GAAa,CAAI,CAAA,CAAA,IAAA,QAAQ,sBAAI,GAAa,OAAI,SAAS,KAAA,iBAAA,CAAA,GAAA,CAAA,CAAA;IAevD,CAAA,IAAA,SAAA,GAAA,mBAAA,GAAa,CAAI,CAAA,CAAA,IAAA,QAAQ,sBAAI,GAAa,OAAI,SAAS,KAAA,iBAAA,CAAA,GAAA,CAAA,CAAA;qCASvD,GAAW,CAAA,EAAA,CAAA,IAAI,aAAa,CAAC,QAAQ,IAAA,iBAAA,CAAA,GAAA,CAAA,CAAA;;;wBA8B/B,GAAS,CAAA,EAAA,CAAA,IAAI,aAAa,CAAC,QAAQ,EAAA,OAAA,iBAAA,CAAA;;;;;;;;wBAkBnC,GAAS,CAAA,EAAA,CAAA,IAAI,aAAa,CAAC,QAAQ,EAAA,OAAA,iBAAA,CAAA;;;;;;sCAgBzC,GAAW,CAAA,EAAA,CAAA,IAAI,aAAa,CAAC,QAAQ,qBAAI,GAAY,CAAA,EAAA,CAAA,IAAI,YAAY,CAAC,GAAG,IAAA,iBAAA,CAAA,GAAA,CAAA,CAAA;IA2BzE,CAAA,IAAA,UAAA,GAAA,mBAAA,GAAa,CAAI,CAAA,CAAA,IAAA,QAAQ,sBAAI,GAAa,OAAI,SAAS,KAAA,iBAAA,CAAA,GAAA,CAAA,CAAA;IA4BvD,CAAA,IAAA,UAAA,GAAA,eAAA,GAAS,CAAI,EAAA,CAAA,IAAA,SAAS,kBAAI,GAAS,QAAI,YAAY,KAAA,iBAAA,CAAA,GAAA,CAAA,CAAA;sBA+EnD,MAAM,CAAC,OAAO,CAAC,cAAc,CAAA,CAAA;;;;oCAAlC,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;iBA9egB,0CAEd,CAAA,CAAA;;iBAAK,qBAEP,CAAA,CAAA;;;;;;;;iBAS0B,+BAExB,CAAA,CAAA;;iBAAK,oBAEP,CAAA,CAAA;;;;;;;;;;;;;;;;;kBA8E0B,6BAExB,CAAA,CAAA;;kBAAK,oBAEP,CAAA,CAAA;;;;;;;;;;;;;kBAeoB,uBAElB,CAAA,CAAA;;kBAAK,kBAEP,CAAA,CAAA;;;;;;;;kBASyB,6BAEvB,CAAA,CAAA;;kBAAK,oBAEP,CAAA,CAAA;;;;kBAGoB,GACtB,CAAA,CAAA;;;;;kBAKwB,0BAEpB,CAAA,CAAA;;kBAAK,+BACU,CAAA,CAAA;;kBAAK,oCAEtB,CAAA,CAAA;;;;;;;;kBAQ0B,8BAExB,CAAA,CAAA;;kBAAK,oBAEP,CAAA,CAAA;;;oCAIC,GAAa,CAAA,EAAA,CAAA,CAAA,CAAA;;;;;;;;;kBAiCc,uBAE1B,CAAA,CAAA;;kBAAK,sBAEP,CAAA,CAAA;;;;;;;;;;;;;kBAeyB,qBAEvB,CAAA,CAAA;;kBAAK,uBAEP,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;kBAyHiC,GACnC,CAAA,CAAA;;;;;;;;;;;;;;;;kBAgEG,0BAED,CAAA,CAAA;;kBAAK,0CAEL,CAAA,CAAA;;kBAAK,2CAEP,CAAA,CAAA;;;;;;;;;;kBAgDoB,0BAEhB,CAAA,CAAA;;kBAAK,wBAEP,CAAA,CAAA;;;;;;;kBAQC,8BAED,CAAA,CAAA;;kBAAK,uBAEP,CAAA,CAAA;;;;kBAE6B,IAAE,CAAA,CAAA;;kBAAwC,IACvE,CAAA,CAAA;;;;kBAIG,mCAED,CAAA,CAAA;;kBAAK,yBAEP,CAAA,CAAA;;;;kBAEiC,IAAE,CAAA,CAAA;;kBAA4C,IAC/E,CAAA,CAAA;;;;;;;;;;;;;;;kBAmBS,2BACM,CAAA,CAAA;qCAAC,GAAc,CAAA,EAAA,CAAA,CAAA,CAAA;kBAAC,iBAAe,CAAA,CAAA;;kBAAa,qBAC3D,CAAA,CAAA;;kBAAY,kBAAgB,CAAA,CAAA;;kBAAc,kBAAgB,CAAA,CAAA;;mBAAc,oCACjD,CAAA,CAAA;;mBAAyB,wBAAsB,CAAA,CAAA;;mBAAmB,wBAC9E,CAAA,CAAA;oCAAC,GAAY,CAAA,CAAA,CAAA,CAAA,CAAA;mBAAC,GAC/B,CAAA,CAAA;;;;;;;;;;;;;;;;;6BA3eiD,GAAa,CAAA,CAAA,CAAA,KAAA,KAAA,CAAA,EAAA,mBAAA,CAAA,iCAAA,GAAA,CAAA,EAAA,CAAA,CAAA,IAAA,CAAA,OAAA,CAAA,CAAA,CAAA;;;;;;;;;4BAkFd,GAAY,CAAA,EAAA,CAAA,KAAA,KAAA,CAAA,EAAA,mBAAA,CAAA,iCAAA,GAAA,CAAA,EAAA,CAAA,CAAA,IAAA,CAAA,OAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2BAmGT,GAAW,CAAA,EAAA,CAAA,KAAA,KAAA,CAAA,EAAA,mBAAA,CAAA,iCAAA,GAAA,CAAA,EAAA,CAAA,CAAA,IAAA,CAAA,OAAA,CAAA,CAAA,CAAA;;;;;;;;;yBAmBd,GAAS,CAAA,EAAA,CAAA,KAAA,KAAA,CAAA,EAAA,mBAAA,CAAA,iCAAA,GAAA,CAAA,EAAA,CAAA,CAAA,IAAA,CAAA,OAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAlO3D,UAsgBM,CAAA,MAAA,EAAA,IAAA,EAAA,MAAA,CAAA,CAAA;OArgBJ,UAA6B,CAAA,IAAA,EAAA,GAAA,CAAA,CAAA;;OAC7B,UA8eM,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;OA7eJ,UA4eO,CAAA,IAAA,EAAA,MAAA,CAAA,CAAA;OA3eL,UAWI,CAAA,MAAA,EAAA,GAAA,CAAA,CAAA;OAVF,UAMI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;OALF,UAIO,CAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OAFL,UAAK,CAAA,MAAA,EAAA,GAAA,CAAA,CAAA;;;OAIT,UAEI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;OADF,UAAkD,CAAA,GAAA,EAAA,MAAA,CAAA,CAAA;uCAAN,GAAG,CAAA,EAAA,CAAA,CAAA,CAAA;;OAInD,UAiBI,CAAA,MAAA,EAAA,GAAA,CAAA,CAAA;OAhBF,UAMI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;OALF,UAIO,CAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OAFL,UAAK,CAAA,MAAA,EAAA,GAAA,CAAA,CAAA;;;OAIT,UAQI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;OAPF,UAMQ,CAAA,GAAA,EAAA,OAAA,CAAA,CAAA;;;;;;gDANiC,GAAa,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;OAyE1D,UAiBI,CAAA,MAAA,EAAA,GAAA,CAAA,CAAA;OAhBF,UAMI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;OALF,UAIO,CAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OAFL,UAAK,CAAA,MAAA,EAAA,GAAA,CAAA,CAAA;;;OAIT,UAQI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;OAPF,UAMQ,CAAA,GAAA,EAAA,OAAA,CAAA,CAAA;;;;;;+CANgC,GAAY,CAAA,EAAA,CAAA,CAAA,CAAA;;OAUxD,UAWI,CAAA,MAAA,EAAA,GAAA,CAAA,CAAA;OAVF,UAMI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;OALF,UAIO,CAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OAFL,UAAK,CAAA,MAAA,EAAA,GAAA,CAAA,CAAA;;;OAIT,UAEI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;OADF,UAA0D,CAAA,GAAA,EAAA,MAAA,CAAA,CAAA;2CAAV,GAAO,CAAA,EAAA,CAAA,CAAA,CAAA;;OAI3D,UAWI,CAAA,MAAA,EAAA,GAAA,CAAA,CAAA;OAVF,UAMI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;OALF,UAIO,CAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OAFL,UAAK,CAAA,MAAA,EAAA,GAAA,CAAA,CAAA;;;OAIT,UAEI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;;;;OAGN,UAYI,CAAA,MAAA,EAAA,GAAA,CAAA,CAAA;OAXF,UAOI,CAAA,GAAA,EAAA,IAAA,CAAA,CAAA;OANF,UAKO,CAAA,IAAA,EAAA,MAAA,CAAA,CAAA;;OAHL,UAAK,CAAA,MAAA,EAAA,GAAA,CAAA,CAAA;;OACU,UAAK,CAAA,MAAA,EAAA,GAAA,CAAA,CAAA;;;OAIxB,UAEI,CAAA,GAAA,EAAA,IAAA,CAAA,CAAA;OADF,UAA8D,CAAA,IAAA,EAAA,MAAA,CAAA,CAAA;6CAAZ,GAAS,CAAA,EAAA,CAAA,CAAA,CAAA;;OAG/D,UAYI,CAAA,MAAA,EAAA,GAAA,CAAA,CAAA;OAXF,UAMI,CAAA,GAAA,EAAA,IAAA,CAAA,CAAA;OALF,UAIO,CAAA,IAAA,EAAA,MAAA,CAAA,CAAA;;OAFL,UAAK,CAAA,MAAA,EAAA,GAAA,CAAA,CAAA;;;OAKT,UAEI,CAAA,GAAA,EAAA,IAAA,CAAA,CAAA;;;;;;;OA8BN,UAiBI,CAAA,MAAA,EAAA,GAAA,CAAA,CAAA;OAhBF,UAMI,CAAA,GAAA,EAAA,IAAA,CAAA,CAAA;OALF,UAIO,CAAA,IAAA,EAAA,MAAA,CAAA,CAAA;;OAFL,UAAK,CAAA,MAAA,EAAA,GAAA,CAAA,CAAA;;;OAIT,UAQI,CAAA,GAAA,EAAA,IAAA,CAAA,CAAA;OAPF,UAMQ,CAAA,IAAA,EAAA,OAAA,CAAA,CAAA;;;;;;8CANmC,GAAW,CAAA,EAAA,CAAA,CAAA,CAAA;;OAU1D,UAiBI,CAAA,MAAA,EAAA,GAAA,CAAA,CAAA;OAhBF,UAMI,CAAA,GAAA,EAAA,IAAA,CAAA,CAAA;OALF,UAIO,CAAA,IAAA,EAAA,MAAA,CAAA,CAAA;;OAFL,UAAK,CAAA,MAAA,EAAA,GAAA,CAAA,CAAA;;;OAIT,UAQI,CAAA,GAAA,EAAA,IAAA,CAAA,CAAA;OAPF,UAMQ,CAAA,IAAA,EAAA,OAAA,CAAA,CAAA;;;;;;4CANgC,GAAS,CAAA,EAAA,CAAA,CAAA,CAAA;;;;;;;;;;OAuGrD,UAiBI,CAAA,MAAA,EAAA,GAAA,CAAA,CAAA;OAhBF,UAYI,CAAA,GAAA,EAAA,IAAA,CAAA,CAAA;OAXF,UAUM,CAAA,IAAA,EAAA,KAAA,CAAA,CAAA;;;OAER,UAEI,CAAA,GAAA,EAAA,IAAA,CAAA,CAAA;;;;OAEN,UAiBI,CAAA,MAAA,EAAA,IAAA,CAAA,CAAA;OAhBF,UAYI,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;OAXF,UAUM,CAAA,IAAA,EAAA,KAAA,CAAA,CAAA;;;OAER,UAEI,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;;;;;;;OA6CN,UAWI,CAAA,MAAA,EAAA,IAAA,CAAA,CAAA;OAVF,UAMI,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;;OAJF,UAAK,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;;OAEL,UAAK,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;;;OAGP,UAEI,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;OADF,UAAoE,CAAA,IAAA,EAAA,MAAA,CAAA,CAAA;gDAAf,GAAY,CAAA,CAAA,CAAA,CAAA,CAAA;;;;OA4CrE,UAWI,CAAA,MAAA,EAAA,IAAA,CAAA,CAAA;OAVF,UAMI,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;OALF,UAIO,CAAA,IAAA,EAAA,MAAA,CAAA,CAAA;;OAFL,UAAK,CAAA,MAAA,EAAA,IAAA,CAAA,CAAA;;;OAIT,UAEI,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;;;OAGN,UASI,CAAA,MAAA,EAAA,IAAA,CAAA,CAAA;OARF,UAII,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;;OAFF,UAAK,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;;;OAGP,UAEI,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;;;;;;OAGN,UASI,CAAA,MAAA,EAAA,IAAA,CAAA,CAAA;OARF,UAII,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;;OAFF,UAAK,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;;;OAGP,UAEI,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;;;;;;OAKV,UAA6B,CAAA,IAAA,EAAA,GAAA,CAAA,CAAA;;OAC7B,UAUO,CAAA,IAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;OAEP,UAMK,CAAA,IAAA,EAAA,GAAA,CAAA,CAAA;OALH,UAAa,CAAA,GAAA,EAAA,EAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6EAnfqC,GAAG,CAAA,EAAA,CAAA,EAAA;wCAAH,GAAG,CAAA,EAAA,CAAA,CAAA,CAAA;;;;0CActC,GAAc,CAAA,CAAA,CAAA,CAAA;;;;qCAAnB,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;4CAAJ,MAAI,CAAA;;;;iDADiC,GAAa,CAAA,CAAA,CAAA,CAAA,CAAA;;;IAUrD,GAAA,sBAAA,GAAa,OAAI,QAAQ,EAAA;;;;;;;;;;;;;IA6BzB,GAAA,sBAAA,GAAa,OAAI,SAAS,EAAA;;;;;;;;;;;;;;yCA4ClB,GAAa,CAAA,EAAA,CAAA,CAAA;;;;qCAAlB,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;4CAAJ,MAAI,CAAA;;;;gDADgC,GAAY,CAAA,EAAA,CAAA,CAAA,CAAA;;;kFAmBJ,GAAO,CAAA,EAAA,CAAA,EAAA;4CAAP,GAAO,CAAA,EAAA,CAAA,CAAA,CAAA;;;IAatD,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,oBAAA,EAAA,IAAA,SAAA,MAAA,SAAA,oBAAA,GAAY,OAAG,GAAG,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,GAAA,EAAA,SAAA,CAAA,CAAA;;sFAc+B,GAAS,CAAA,EAAA,CAAA,EAAA;8CAAT,GAAS,CAAA,EAAA,CAAA,CAAA,CAAA;;;sFAa1D,GAAa,CAAA,EAAA,CAAA,CAAA,CAAA;;IAKb,GAAA,sBAAA,GAAa,CAAI,CAAA,CAAA,IAAA,QAAQ,sBAAI,GAAa,OAAI,SAAS,EAAA;;;;;;;;;;;;;IAavD,GAAA,sBAAA,GAAa,CAAI,CAAA,CAAA,IAAA,QAAQ,sBAAI,GAAa,OAAI,SAAS,EAAA;;;;;;;;;;;;;;0CAuB/C,GAAc,CAAA,EAAA,CAAA,CAAA;;;;qCAAnB,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;4CAAJ,MAAI,CAAA;;;;+CADmC,GAAW,CAAA,EAAA,CAAA,CAAA,CAAA;;;;0CAoB7C,GAAc,CAAA,EAAA,CAAA,CAAA;;;;qCAAnB,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;4CAAJ,MAAI,CAAA;;;;6CADgC,GAAS,CAAA,EAAA,CAAA,CAAA,CAAA;;;yBA+BhD,GAAS,CAAA,EAAA,CAAA,IAAI,aAAa,CAAC,OAAO,kBAAI,GAAS,CAAA,EAAA,CAAA,IAAI,aAAa,CAAC,UAAU,EAAA;;;;;;;;;;;;;IAqB3E,GAAA,sBAAA,GAAa,CAAI,CAAA,CAAA,IAAA,QAAQ,sBAAI,GAAa,OAAI,SAAS,EAAA;;;;;;;;;;;;;IAevD,GAAA,sBAAA,GAAa,CAAI,CAAA,CAAA,IAAA,QAAQ,sBAAI,GAAa,OAAI,SAAS,EAAA;;;;;;;;;;;;;2BASvD,GAAW,CAAA,EAAA,CAAA,IAAI,aAAa,CAAC,QAAQ,EAAA;;;;;;;;;;;;;;;;;;;;;;;IA0CrC,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,+BAAA,CAAA,IAAA,SAAA,MAAA,SAAA,+BAAA,GAAuB,SAAK,GAAG,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,GAAA,EAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;kFAkB/B,GAAQ,CAAA,CAAA,CAAA,EAAA,CAAG,OAAO,CAAC,CAAC,CAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,GAAA,EAAA,SAAA,CAAA,CAAA;;2BAIpB,GAAW,CAAA,EAAA,CAAA,IAAI,aAAa,CAAC,QAAQ,qBAAI,GAAY,CAAA,EAAA,CAAA,IAAI,YAAY,CAAC,GAAG,EAAA;;;;;;;;;;;;;IA2BzE,GAAA,sBAAA,GAAa,CAAI,CAAA,CAAA,IAAA,QAAQ,sBAAI,GAAa,OAAI,SAAS,EAAA;;;;;;;;;;;;;yFAwBH,GAAY,CAAA,CAAA,CAAA,EAAA;iDAAZ,GAAY,CAAA,CAAA,CAAA,CAAA,CAAA;;;IAIhE,GAAA,kBAAA,GAAS,CAAI,EAAA,CAAA,IAAA,SAAS,kBAAI,GAAS,QAAI,YAAY,EAAA;;;;;;;;;;;;;oFAiDnD,GAAS,CAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,GAAA,EAAA,SAAA,CAAA,CAAA;+FAWT,GAAc,CAAA,EAAA,CAAA,CAAC,OAAO,CAAC,CAAC,CAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,GAAA,EAAA,SAAA,CAAA,CAAA;IAAM,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,2BAAA,SAAA,IAAA,SAAA,MAAA,SAAA,GAAA,yBAAA,GAAmB,CAAG,EAAA,CAAA,GAAA,GAAG,EAAE,OAAO,CAAC,CAAC,CAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,GAAA,EAAA,SAAA,CAAA,CAAA;uGAWlE,GAAkB,CAAA,EAAA,CAAA,CAAC,OAAO,CAAC,CAAC,CAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,GAAA,EAAA,SAAA,CAAA,CAAA;IAAM,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,+BAAA,CAAA,IAAA,SAAA,MAAA,SAAA,GAAA,6BAAA,GAAuB,CAAG,CAAA,CAAA,GAAA,GAAG,EAAE,OAAO,CAAC,CAAC,CAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,GAAA,EAAA,SAAA,CAAA,CAAA;;;qBAQ1E,MAAM,CAAC,OAAO,CAAC,cAAc,CAAA,CAAA;;;;mCAAlC,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;wCAAJ,MAAI,CAAA;;;oFAac,GAAc,CAAA,EAAA,CAAA,CAAA,CAAA;oFAAiB,GAAS,CAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,GAAA,EAAA,SAAA,CAAA,CAAA;kFACvD,GAAQ,CAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,GAAA,EAAA,SAAA,CAAA,CAAA;sFAAoB,GAAU,CAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,GAAA,EAAA,SAAA,CAAA,CAAA;qFAAoB,GAAU,CAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,GAAA,EAAA,SAAA,CAAA,CAAA;6GAC7C,GAAqB,CAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,IAAA,EAAA,UAAA,CAAA,CAAA;iGAA0B,GAAe,CAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,IAAA,EAAA,UAAA,CAAA,CAAA;8EAC1E,GAAY,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WAj0BnB,cAAc,GAAA;QACrB,EAAE,EAAE,SAAS,EAAE,IAAI,EAAA,CAAA,gBAAA,CAAA,EAAA;QACnB,EAAE,EAAE,SAAS,EAAE,IAAI,EAAA,CAAA,gBAAA,CAAA,EAAA;QACnB,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAA,CAAA,YAAA,CAAA,EAAA;;;IAOX,CAAA,IAAA,EAAA,aAAa,GAAG,SAAS,EAAA,GAAA,OAAA,CAAA;;;;;;;;MAgUgB,GAAG,GAAA,SAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA;;;;;MAaN,aAAa,GAAA,YAAA,CAAA,IAAA,CAAA,CAAA;;;;;;MAuBtC,oBAAoB,GAAA,SAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA;;;;;MA0Ba,cAAc,GAAA,SAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA;;;;;MAiCvB,YAAY,GAAA,YAAA,CAAA,IAAA,CAAA,CAAA;;;;;;MAmBJ,OAAO,GAAA,SAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA;;;;;MA2BL,SAAS,GAAA,SAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA;;;;;MAqDhB,WAAW,GAAA,YAAA,CAAA,IAAA,CAAA,CAAA;;;;;;MAmBd,SAAS,GAAA,YAAA,CAAA,IAAA,CAAA,CAAA;;;;;;MAyCP,YAAY,GAAA,YAAA,CAAA,IAAA,CAAA,CAAA;;;;;;MAsJD,YAAY,GAAA,SAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA9sBxE,YAAA,CAAA,EAAA,EAAE,oBAAoB,GAAG,aAAa,IAAI,SAAS,GAAG,GAAG,GAAG,CAAC,CAAA,CAAA;;;;;;;IAK9D,oBAAG,oBAAoB,GAAA,MAAA;IACjB,IAAA,IAAA,aAAa,IAAI,SAAS,EAAA;gBACrB,GAAG,CAAA;IACD,KAAA,MAAA,IAAA,aAAa,IAAI,SAAS,EAAA;gBAC5B,CAAC,CAAA;IACC,KAAA,MAAA,IAAA,aAAa,IAAI,QAAQ,EAAA;IAC3B,KAAA,OAAA,GAAG,GAAG,oBAAoB,CAAA;;gBAE1B,CAAC,CAAA;;;;;;;;;IAOZ,oBAAG,iBAAiB,GAAA,MAAA;IACX,IAAA,OAAA,oBAAoB,KAAK,GAAG,CAAA;;;;;;;;IAMrC,oBAAG,iBAAiB,GAAA,MAAA;IACX,IAAA,OAAA,oBAAoB,GAAG,GAAG,CAAA;;;;;;;;;IAanC,GAAG,YAAA,CAAA,EAAA,EAAA,aAAa,GAAG,OAAO,GAAG,SAAS,CAAA,CAAA;;;;;;;IAKtC,oBAAG,gBAAgB,GAAA,MAAA;IACV,IAAA,OAAA,aAAa,GAAG,iBAAiB,EAAA,CAAA;;;;;;;;IAM1C,oBAAG,gBAAgB,GAAA,MAAA;IACV,IAAA,OAAA,aAAa,GAAG,iBAAiB,EAAA,CAAA;;;;;;;;;IAO1C,GAAG,YAAA,CAAA,EAAA,EAAA,YAAY,GAAG,OAAO,GAAG,GAAG,CAAA,CAAA;;;;;;;IAM/B,oBAAG,GAAG,GAAG,MAAM,CAAC,oBAAoB,IAAI,cAAc,CAAA,CAAA,CAAA;;;;;;;IAKtD,oBAAG,GAAG,GAAG,MAAM,CAAC,oBAAoB,IAAI,cAAc,CAAA,CAAA,CAAA;;;;;;;IAKtD,oBAAG,YAAY,GAAG,MAAM,CAAC,gBAAgB,IAAI,cAAc,CAAA,CAAA,CAAA;;;;;;;;;;OAQ1D,YAAA,CAAA,EAAA,EAAE,YAAY,GAAG,gBAAgB,EAAA,CAAA,CAAA;;;;;;;IAYlC,oBAAG,qBAAqB,GAAA,MAAA;;IAEf,IAAA,OAAAA,mBAAiB,CAAC,WAAW,EAAE,SAAS,EAAE,YAAY,CAAA,CAAA;;;;;;;;;;IA6C/D,oBAAGC,cAAY,GAAA,MAAA;cACP,UAAU,GAAA;SACd,QAAQ,EAAA;UACD,GAAG;IACR,MAAA,MAAM,EAAE,cAAc;IACtB,MAAA,IAAI,EAAE,YAAY;UAClB,QAAQ,EAAA,EAAA;UAER,IAAI,EAAA;WACF,OAAO,EAAA;IACL,QAAA,IAAI,EAAE,aAAa;IACnB,QAAA,IAAI,EAAE,WAAW;IACjB,QAAA,IAAI,EAAE,YAAY;;WAEpB,KAAK,EAAA;IACH,QAAA,IAAI,EAAE,WAAW;IACjB,QAAA,IAAI,EAAE,SAAS;IACf,QAAA,IAAI,EAAE,YAAY;;WAEpB,OAAO,EAAA;IACL,QAAA,IAAI,EAAE,aAAa;YACnB,IAAI,EAAE,aAAa,CAAC,QAAQ;IAC5B,QAAA,IAAI,EAAE,YAAY;;;;IAIxB,KAAA,MAAM,EAAE,OAAO;SACJ,SAAS;;;IAGhB,IAAA,MAAA,GAAG,GAAGC,YAAgB,CAAC,UAAU,EAAE,YAAY,CAAA,CAAA;eAC9C,GAAG,CAAA;;;;;;;;IAtEZ,mBAAG,UAAU,GAAA,MAAA;IACL,IAAA,MAAA,GAAG,GAAGD,cAAY,EAAA,CAAA;IACjB,IAAA,OAAA,GAAG,CAAC,UAAU,CAAA;;;;;;;;;;;;;;IAcvB,oBAAG,uBAAuB,GAAA,MAAA;IACjB,IAAA,OAAAE,sBAA0B,CAAC,SAAS,EAAE,YAAY,EAAE,YAAY,CAAA,CAAA;;;;;;;;IAMzE,mBAAG,QAAQ,GAAA,MAAA;IACH,IAAA,MAAA,GAAG,GAAGF,cAAY,EAAA,CAAA;IACjB,IAAA,OAAA,GAAG,CAAC,QAAQ,CAAA;;;;;;;;;;;;IAmDrB,mBAAG,SAAS,GAAA,MAAA;IACJ,IAAA,MAAA,GAAG,GAAGA,cAAY,EAAA,CAAA;IACjB,IAAA,OAAA,GAAG,CAAC,SAAS,CAAA;;;;;;;;IAOtB,oBAAG,qBAAqB,GAAA,MAAA;YAClB,SAAS,IAAI,UAAU,EAClB,OAAAD,mBAAiB,CAAC,UAAU,EAAE,SAAS,EAAE,YAAY,CAAA,CAAA;eACvD,CAAC,CAAA;;;;;;;;IAMV,mBAAG,UAAU,GAAA,MAAA;IACL,IAAA,MAAA,GAAG,GAAGC,cAAY,EAAA,CAAA;IACjB,IAAA,OAAA,GAAG,CAAC,UAAU,CAAA;;;;;;;;IAMvB,mBAAG,qBAAqB,GAAA,MAAA;;;IAGf,IAAA,OAAA,YAAY,GAAGD,mBAAiB,CAAC,UAAU,EAAE,YAAY,CAAA,CAAA;;;;;;;;IAMlE,mBAAG,eAAe,GAAA,MAAA;IACV,IAAA,MAAA,GAAG,GAAGC,cAAY,EAAA,CAAA;IACjB,IAAA,OAAA,GAAG,CAAC,eAAe,CAAA;;;;;;;;;;;IAW5B,oBAAG,yBAAyB,GAAA,MAAA;IACnB,IAAA,OAAA,eAAe,KAAK,YAAY,CAAA;;;;;;;;IAMzC,oBAAG,0BAA0B,GAAA,MAAA;eACpBD,mBAAiB,CAAC,UAAU,EAAE,cAAc,CAAA,CAAA;;;;;;;;IAMrD,oBAAG,aAAa,GAAA,MAAA;IACR,IAAA,MAAA,GAAG,GAAGC,cAAY,EAAA,CAAA;IAEjB,IAAA,OAAA,GAAG,CAAC,aAAa,CAAA;;;;;;;;;;;IAwC1B,GAAG,YAAA,CAAA,EAAA,EAAA,cAAc,GACf,SAAS,KACT,QAAQ,EAAA,GACR,UAAU,EAAA,GACV,UAAU,EACV,GAAA,qBAAqB,EACrB,GAAA,eAAe,KACf,YAAY,CAAA,CAAA;;;;;;;IAjBd,oBAAG,kBAAkB,GAAG,OAAO,GAAG,SAAS,GAAG,cAAc,CAAA,CAAA;;;;;;;IAK5D,GAAG,YAAA,CAAA,CAAA,EAAA,uBAAuB,GAAG,kBAAkB,GAAG,OAAO,CAAA,CAAA;;;;;;;IAiBzD,GAAG,YAAA,CAAA,EAAA,EAAA,mBAAmB,GAAG,CAAC,GAAG,uBAAuB,CAAA,CAAA;;;;KA5XnD,YAAA,CAAA,EAAA,EAAE,GAAG,GAAG,KAAK,CAAA,CAAA;;;;;;IAMd,kBAAG,cAAc,GAAA;;OACb,EAAE,EAAE,aAAa,CAAC,QAAQ;OAAE,IAAI,EAAA,CAAA,aAAA,CAAA;;;OAChC,EAAE,EAAE,aAAa,CAAC,UAAU;OAAE,IAAI,EAAA,CAAA,eAAA,CAAA;;;OAClC,EAAE,EAAE,aAAa,CAAC,OAAO;OAAE,IAAI,EAAA,CAAA,cAAA,CAAA;;;;;;;IAMnC,kBAAG,aAAa,GAAA;IACZ,EAAA,EAAA,EAAE,EAAE,YAAY,CAAC,GAAG,EAAE,IAAI,EAAA,CAAA,QAAA,CAAA,EAAA;;OAC1B,EAAE,EAAE,YAAY,CAAC,OAAO;OAAE,IAAI,EAAA,CAAA,YAAA,CAAA;;;;IAIlC,CAAG,YAAA,CAAA,EAAA,EAAA,YAAY,GAAG,YAAY,CAAC,GAAG,CAAA,CAAA;;;;;;IAMlC,CAAG,YAAA,CAAA,EAAA,EAAA,WAAW,GAAG,aAAa,CAAC,QAAQ,CAAA,CAAA;;;;;;;KAOtC,YAAA,CAAA,EAAA,EAAE,SAAS,GAAG,CAAC,CAAA,CAAA;;;;;;IAMhB,CAAG,YAAA,CAAA,EAAA,EAAA,SAAS,GAAI,aAAa,CAAC,OAAO,CAAA,CAAA;;;;;;;;;;;;;;;;;;;KAqBpC,YAAA,CAAA,EAAA,EAAE,cAAc,GAAG,EAAE,CAAA,CAAA;;;;;;KAwDrB,YAAA,CAAA,EAAA,EAAE,OAAO,GAAG,IAAI,CAAA,CAAA;;;;;KAuDhB,YAAA,CAAA,EAAA,EAAED,mBAAiB,GAAI,CAAA,aAAa,EAAE,IAAI,EAAE,KAAK,GAAG,SAAS,KAAA;IACrD,EAAA,OAAAI,iBAAqB,CAAC,aAAa,EAAE,IAAI,EAAE,KAAK,CAAA,CAAA;;;;;;IA8KzD,CAAG,YAAA,CAAA,EAAA,EAAA,YAAY,GAAG,aAAa,CAAC,CAAC,CAAA,CAAA;;;;;;KAMhC,YAAA,CAAA,CAAA,EAAE,YAAY,GAAG,CAAC,CAAA,CAAA;;;;;IAfnB,kBAAG,aAAa,GAAA;IACZ,EAAA,EAAA,EAAE,EAAE,aAAa,CAAC,CAAC,EAAE,IAAI,EAAA,CAAA,MAAA,CAAA,EAAA;IACzB,EAAA,EAAA,EAAE,EAAE,aAAa,CAAC,CAAC,EAAE,IAAI,EAAA,CAAA,MAAA,CAAA,EAAA;IACzB,EAAA,EAAA,EAAE,EAAE,aAAa,CAAC,CAAC,EAAE,IAAI,EAAA,CAAA,MAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5V/B,UAAM,GAAG,GAAG,IAAI,GAAG,CAAC;QACnB,MAAM,EAAE,QAAQ,CAAC,IAAI;IACrB,IAAA,KAAK,EAAE;IACN,QAAA,IAAI,EAAE,OAAO;IACb,KAAA;IACD,CAAA;;;;;;;;"}